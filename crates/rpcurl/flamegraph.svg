<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1014" onload="init(evt)" viewBox="0 0 1200 1014" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1014" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="997.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="997.00"> </text><svg id="frames" x="10" width="1180" total_samples="95"><g><title>libdyld.dylib`dyld4::LibSystemHelpers::getenv (1 samples, 1.05%)</title><rect x="0.0000%" y="933" width="1.0526%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="943.50"></text></g><g><title>libsystem_kernel.dylib`__exit (1 samples, 1.05%)</title><rect x="0.0000%" y="917" width="1.0526%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="927.50"></text></g><g><title>rpcurl`tokio::runtime::builder::Builder::build (1 samples, 1.05%)</title><rect x="1.0526%" y="853" width="1.0526%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="1"/><text x="1.3026%" y="863.50"></text></g><g><title>rpcurl`tokio::runtime::driver::Driver::new (1 samples, 1.05%)</title><rect x="1.0526%" y="837" width="1.0526%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="1"/><text x="1.3026%" y="847.50"></text></g><g><title>rpcurl`tokio::runtime::io::driver::Driver::new (1 samples, 1.05%)</title><rect x="1.0526%" y="821" width="1.0526%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="1"/><text x="1.3026%" y="831.50"></text></g><g><title>rpcurl`mio::poll::Registry::try_clone (1 samples, 1.05%)</title><rect x="1.0526%" y="805" width="1.0526%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="1"/><text x="1.3026%" y="815.50"></text></g><g><title>rpcurl`std::os::fd::owned::OwnedFd::try_clone (1 samples, 1.05%)</title><rect x="1.0526%" y="789" width="1.0526%" height="15" fill="rgb(207,160,47)" fg:x="1" fg:w="1"/><text x="1.3026%" y="799.50"></text></g><g><title>libsystem_kernel.dylib`__fcntl (1 samples, 1.05%)</title><rect x="1.0526%" y="773" width="1.0526%" height="15" fill="rgb(228,23,34)" fg:x="1" fg:w="1"/><text x="1.3026%" y="783.50"></text></g><g><title>rpcurl`&lt;tonic::transport::channel::ResponseFuture as core::future::future::Future&gt;::poll (1 samples, 1.05%)</title><rect x="2.1053%" y="805" width="1.0526%" height="15" fill="rgb(218,30,26)" fg:x="2" fg:w="1"/><text x="2.3553%" y="815.50"></text></g><g><title>rpcurl`alloc::sync::Arc&lt;T,A&gt;::drop_slow (1 samples, 1.05%)</title><rect x="2.1053%" y="789" width="1.0526%" height="15" fill="rgb(220,122,19)" fg:x="2" fg:w="1"/><text x="2.3553%" y="799.50"></text></g><g><title>rpcurl`&lt;rustls::crypto::aws_lc_rs::kx::KxGroup as rustls::crypto::SupportedKxGroup&gt;::start (1 samples, 1.05%)</title><rect x="3.1579%" y="661" width="1.0526%" height="15" fill="rgb(250,228,42)" fg:x="3" fg:w="1"/><text x="3.4079%" y="671.50"></text></g><g><title>rpcurl`aws_lc_rs::agreement::generate_x25519 (1 samples, 1.05%)</title><rect x="3.1579%" y="645" width="1.0526%" height="15" fill="rgb(240,193,28)" fg:x="3" fg:w="1"/><text x="3.4079%" y="655.50"></text></g><g><title>rpcurl`evp_pkey_ctx_new (1 samples, 1.05%)</title><rect x="3.1579%" y="629" width="1.0526%" height="15" fill="rgb(216,20,37)" fg:x="3" fg:w="1"/><text x="3.4079%" y="639.50"></text></g><g><title>rpcurl`aws_lc_0_20_1_CRYPTO_once (1 samples, 1.05%)</title><rect x="3.1579%" y="613" width="1.0526%" height="15" fill="rgb(206,188,39)" fg:x="3" fg:w="1"/><text x="3.4079%" y="623.50"></text></g><g><title>libsystem_pthread.dylib`pthread_once (1 samples, 1.05%)</title><rect x="3.1579%" y="597" width="1.0526%" height="15" fill="rgb(217,207,13)" fg:x="3" fg:w="1"/><text x="3.4079%" y="607.50"></text></g><g><title>libsystem_platform.dylib`_os_once_callout (1 samples, 1.05%)</title><rect x="3.1579%" y="581" width="1.0526%" height="15" fill="rgb(231,73,38)" fg:x="3" fg:w="1"/><text x="3.4079%" y="591.50"></text></g><g><title>libsystem_pthread.dylib`__pthread_once_handler (1 samples, 1.05%)</title><rect x="3.1579%" y="565" width="1.0526%" height="15" fill="rgb(225,20,46)" fg:x="3" fg:w="1"/><text x="3.4079%" y="575.50"></text></g><g><title>rpcurl`AWSLC_fips_evp_pkey_methods_init (1 samples, 1.05%)</title><rect x="3.1579%" y="549" width="1.0526%" height="15" fill="rgb(210,31,41)" fg:x="3" fg:w="1"/><text x="3.4079%" y="559.50"></text></g><g><title>rpcurl`aws_lc_0_20_1_CRYPTO_once (1 samples, 1.05%)</title><rect x="3.1579%" y="533" width="1.0526%" height="15" fill="rgb(221,200,47)" fg:x="3" fg:w="1"/><text x="3.4079%" y="543.50"></text></g><g><title>libsystem_pthread.dylib`pthread_once (1 samples, 1.05%)</title><rect x="3.1579%" y="517" width="1.0526%" height="15" fill="rgb(226,26,5)" fg:x="3" fg:w="1"/><text x="3.4079%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_os_once_callout (1 samples, 1.05%)</title><rect x="3.1579%" y="501" width="1.0526%" height="15" fill="rgb(249,33,26)" fg:x="3" fg:w="1"/><text x="3.4079%" y="511.50"></text></g><g><title>rpcurl`aws_lc_0_20_1_EVP_PKEY_rsa_pkey_meth_init (1 samples, 1.05%)</title><rect x="3.1579%" y="485" width="1.0526%" height="15" fill="rgb(235,183,28)" fg:x="3" fg:w="1"/><text x="3.4079%" y="495.50"></text></g><g><title>rpcurl`rustls::client::client_conn::connection::ClientConnection::new (2 samples, 2.11%)</title><rect x="3.1579%" y="709" width="2.1053%" height="15" fill="rgb(221,5,38)" fg:x="3" fg:w="2"/><text x="3.4079%" y="719.50">r..</text></g><g><title>rpcurl`rustls::client::client_conn::_&lt;impl rustls::conn::ConnectionCore&lt;rustls::client::client_conn::ClientConnectionData&gt;&gt;::for_client (2 samples, 2.11%)</title><rect x="3.1579%" y="693" width="2.1053%" height="15" fill="rgb(247,18,42)" fg:x="3" fg:w="2"/><text x="3.4079%" y="703.50">r..</text></g><g><title>rpcurl`rustls::client::hs::start_handshake (2 samples, 2.11%)</title><rect x="3.1579%" y="677" width="2.1053%" height="15" fill="rgb(241,131,45)" fg:x="3" fg:w="2"/><text x="3.4079%" y="687.50">r..</text></g><g><title>rpcurl`rustls::client::hs::emit_client_hello_for_retry (1 samples, 1.05%)</title><rect x="4.2105%" y="661" width="1.0526%" height="15" fill="rgb(249,31,29)" fg:x="4" fg:w="1"/><text x="4.4605%" y="671.50"></text></g><g><title>rpcurl`rustls::msgs::handshake::ClientHelloPayload::payload_encode (1 samples, 1.05%)</title><rect x="4.2105%" y="645" width="1.0526%" height="15" fill="rgb(225,111,53)" fg:x="4" fg:w="1"/><text x="4.4605%" y="655.50"></text></g><g><title>rpcurl`&lt;tonic::transport::channel::service::connector::Connector&lt;C&gt; as tower_service::Service&lt;http::uri::Uri&gt;&gt;::call::_{{closure}} (3 samples, 3.16%)</title><rect x="3.1579%" y="725" width="3.1579%" height="15" fill="rgb(238,160,17)" fg:x="3" fg:w="3"/><text x="3.4079%" y="735.50">rpc..</text></g><g><title>rpcurl`tokio_rustls::common::Stream&lt;IO,C&gt;::handshake (1 samples, 1.05%)</title><rect x="5.2632%" y="709" width="1.0526%" height="15" fill="rgb(214,148,48)" fg:x="5" fg:w="1"/><text x="5.5132%" y="719.50"></text></g><g><title>rpcurl`tokio_rustls::common::Stream&lt;IO,C&gt;::read_io (1 samples, 1.05%)</title><rect x="5.2632%" y="693" width="1.0526%" height="15" fill="rgb(232,36,49)" fg:x="5" fg:w="1"/><text x="5.5132%" y="703.50"></text></g><g><title>rpcurl`rustls::common_state::CommonState::process_main_protocol (1 samples, 1.05%)</title><rect x="5.2632%" y="677" width="1.0526%" height="15" fill="rgb(209,103,24)" fg:x="5" fg:w="1"/><text x="5.5132%" y="687.50"></text></g><g><title>rpcurl`&lt;rustls::client::tls13::ExpectCertificateVerify as rustls::common_state::State&lt;rustls::client::client_conn::ClientConnectionData&gt;&gt;::handle (1 samples, 1.05%)</title><rect x="5.2632%" y="661" width="1.0526%" height="15" fill="rgb(229,88,8)" fg:x="5" fg:w="1"/><text x="5.5132%" y="671.50"></text></g><g><title>rpcurl`&lt;rustls::webpki::server_verifier::WebPkiServerVerifier as rustls::verify::ServerCertVerifier&gt;::verify_server_cert (1 samples, 1.05%)</title><rect x="5.2632%" y="645" width="1.0526%" height="15" fill="rgb(213,181,19)" fg:x="5" fg:w="1"/><text x="5.5132%" y="655.50"></text></g><g><title>rpcurl`webpki::end_entity::EndEntityCert::verify_for_usage (1 samples, 1.05%)</title><rect x="5.2632%" y="629" width="1.0526%" height="15" fill="rgb(254,191,54)" fg:x="5" fg:w="1"/><text x="5.5132%" y="639.50"></text></g><g><title>rpcurl`webpki::verify_cert::ChainOptions::build_chain (1 samples, 1.05%)</title><rect x="5.2632%" y="613" width="1.0526%" height="15" fill="rgb(241,83,37)" fg:x="5" fg:w="1"/><text x="5.5132%" y="623.50"></text></g><g><title>rpcurl`webpki::verify_cert::ChainOptions::build_chain_inner (1 samples, 1.05%)</title><rect x="5.2632%" y="597" width="1.0526%" height="15" fill="rgb(233,36,39)" fg:x="5" fg:w="1"/><text x="5.5132%" y="607.50"></text></g><g><title>rpcurl`webpki::verify_cert::ChainOptions::build_chain_inner (1 samples, 1.05%)</title><rect x="5.2632%" y="581" width="1.0526%" height="15" fill="rgb(226,3,54)" fg:x="5" fg:w="1"/><text x="5.5132%" y="591.50"></text></g><g><title>rpcurl`webpki::signed_data::verify_signed_data (1 samples, 1.05%)</title><rect x="5.2632%" y="565" width="1.0526%" height="15" fill="rgb(245,192,40)" fg:x="5" fg:w="1"/><text x="5.5132%" y="575.50"></text></g><g><title>rpcurl`&lt;aws_lc_rs::rsa::signature::RsaParameters as aws_lc_rs::signature::VerificationAlgorithm&gt;::verify_sig (1 samples, 1.05%)</title><rect x="5.2632%" y="549" width="1.0526%" height="15" fill="rgb(238,167,29)" fg:x="5" fg:w="1"/><text x="5.5132%" y="559.50"></text></g><g><title>rpcurl`aws_lc_0_20_1_EVP_DigestVerify (1 samples, 1.05%)</title><rect x="5.2632%" y="533" width="1.0526%" height="15" fill="rgb(232,182,51)" fg:x="5" fg:w="1"/><text x="5.5132%" y="543.50"></text></g><g><title>rpcurl`aws_lc_0_20_1_EVP_DigestVerifyFinal (1 samples, 1.05%)</title><rect x="5.2632%" y="517" width="1.0526%" height="15" fill="rgb(231,60,39)" fg:x="5" fg:w="1"/><text x="5.5132%" y="527.50"></text></g><g><title>rpcurl`aws_lc_0_20_1_rsa_verify_no_self_test (1 samples, 1.05%)</title><rect x="5.2632%" y="501" width="1.0526%" height="15" fill="rgb(208,69,12)" fg:x="5" fg:w="1"/><text x="5.5132%" y="511.50"></text></g><g><title>rpcurl`aws_lc_0_20_1_rsa_verify_raw_no_self_test (1 samples, 1.05%)</title><rect x="5.2632%" y="485" width="1.0526%" height="15" fill="rgb(235,93,37)" fg:x="5" fg:w="1"/><text x="5.5132%" y="495.50"></text></g><g><title>rpcurl`aws_lc_0_20_1_BN_mod_exp_mont (1 samples, 1.05%)</title><rect x="5.2632%" y="469" width="1.0526%" height="15" fill="rgb(213,116,39)" fg:x="5" fg:w="1"/><text x="5.5132%" y="479.50"></text></g><g><title>rpcurl`aws_lc_0_20_1_BN_mod_mul_montgomery (1 samples, 1.05%)</title><rect x="5.2632%" y="453" width="1.0526%" height="15" fill="rgb(222,207,29)" fg:x="5" fg:w="1"/><text x="5.5132%" y="463.50"></text></g><g><title>rpcurl`bignum_emontredc_8n_neon_maddloop_neon (1 samples, 1.05%)</title><rect x="5.2632%" y="437" width="1.0526%" height="15" fill="rgb(206,96,30)" fg:x="5" fg:w="1"/><text x="5.5132%" y="447.50"></text></g><g><title>rpcurl`&lt;tonic::transport::channel::service::connection::Connection as tower_service::Service&lt;http::request::Request&lt;http_body_util::combinators::box_body::UnsyncBoxBody&lt;bytes::bytes::Bytes,tonic::status::Status&gt;&gt;&gt;&gt;::poll_ready (4 samples, 4.21%)</title><rect x="3.1579%" y="805" width="4.2105%" height="15" fill="rgb(218,138,4)" fg:x="3" fg:w="4"/><text x="3.4079%" y="815.50">rpcur..</text></g><g><title>rpcurl`&lt;tower::util::map_future::MapFuture&lt;S,F&gt; as tower_service::Service&lt;R&gt;&gt;::poll_ready (4 samples, 4.21%)</title><rect x="3.1579%" y="789" width="4.2105%" height="15" fill="rgb(250,191,14)" fg:x="3" fg:w="4"/><text x="3.4079%" y="799.50">rpcur..</text></g><g><title>rpcurl`&lt;tower::util::either::Either&lt;A,B&gt; as tower_service::Service&lt;Request&gt;&gt;::poll_ready (4 samples, 4.21%)</title><rect x="3.1579%" y="773" width="4.2105%" height="15" fill="rgb(239,60,40)" fg:x="3" fg:w="4"/><text x="3.4079%" y="783.50">rpcur..</text></g><g><title>rpcurl`&lt;tonic::transport::channel::service::reconnect::Reconnect&lt;M,Target&gt; as tower_service::Service&lt;Request&gt;&gt;::poll_ready (4 samples, 4.21%)</title><rect x="3.1579%" y="757" width="4.2105%" height="15" fill="rgb(206,27,48)" fg:x="3" fg:w="4"/><text x="3.4079%" y="767.50">rpcur..</text></g><g><title>rpcurl`&lt;tonic::transport::channel::service::connection::MakeSendRequestService&lt;C&gt; as tower_service::Service&lt;http::uri::Uri&gt;&gt;::call::_{{closure}} (4 samples, 4.21%)</title><rect x="3.1579%" y="741" width="4.2105%" height="15" fill="rgb(225,35,8)" fg:x="3" fg:w="4"/><text x="3.4079%" y="751.50">rpcur..</text></g><g><title>rpcurl`tokio_util::codec::length_delimited::Builder::length_field_length (1 samples, 1.05%)</title><rect x="6.3158%" y="725" width="1.0526%" height="15" fill="rgb(250,213,24)" fg:x="6" fg:w="1"/><text x="6.5658%" y="735.50"></text></g><g><title>rpcurl`rustls::webpki::anchors::RootCertStore::add_parsable_certificates (1 samples, 1.05%)</title><rect x="7.3684%" y="757" width="1.0526%" height="15" fill="rgb(247,123,22)" fg:x="7" fg:w="1"/><text x="7.6184%" y="767.50"></text></g><g><title>rpcurl`webpki::trust_anchor::anchor_from_trusted_cert (1 samples, 1.05%)</title><rect x="7.3684%" y="741" width="1.0526%" height="15" fill="rgb(231,138,38)" fg:x="7" fg:w="1"/><text x="7.6184%" y="751.50"></text></g><g><title>rpcurl`untrusted::input::Input::read_all (1 samples, 1.05%)</title><rect x="7.3684%" y="725" width="1.0526%" height="15" fill="rgb(231,145,46)" fg:x="7" fg:w="1"/><text x="7.6184%" y="735.50"></text></g><g><title>rpcurl`webpki::der::nested_limited (1 samples, 1.05%)</title><rect x="7.3684%" y="709" width="1.0526%" height="15" fill="rgb(251,118,11)" fg:x="7" fg:w="1"/><text x="7.6184%" y="719.50"></text></g><g><title>rpcurl`webpki::der::nested_of_mut (1 samples, 1.05%)</title><rect x="7.3684%" y="693" width="1.0526%" height="15" fill="rgb(217,147,25)" fg:x="7" fg:w="1"/><text x="7.6184%" y="703.50"></text></g><g><title>rpcurl`webpki::der::nested_limited (1 samples, 1.05%)</title><rect x="7.3684%" y="677" width="1.0526%" height="15" fill="rgb(247,81,37)" fg:x="7" fg:w="1"/><text x="7.6184%" y="687.50"></text></g><g><title>rpcurl`webpki::x509::remember_extension (1 samples, 1.05%)</title><rect x="7.3684%" y="661" width="1.0526%" height="15" fill="rgb(209,12,38)" fg:x="7" fg:w="1"/><text x="7.6184%" y="671.50"></text></g><g><title>CoreFoundation`-[__NSArrayM dealloc] (1 samples, 1.05%)</title><rect x="9.4737%" y="725" width="1.0526%" height="15" fill="rgb(227,1,9)" fg:x="9" fg:w="1"/><text x="9.7237%" y="735.50"></text></g><g><title>CoreFoundation`__RELEASE_OBJECTS_IN_THE_ARRAY__ (1 samples, 1.05%)</title><rect x="9.4737%" y="709" width="1.0526%" height="15" fill="rgb(248,47,43)" fg:x="9" fg:w="1"/><text x="9.7237%" y="719.50"></text></g><g><title>CoreFoundation`_CFRelease (1 samples, 1.05%)</title><rect x="9.4737%" y="693" width="1.0526%" height="15" fill="rgb(221,10,30)" fg:x="9" fg:w="1"/><text x="9.7237%" y="703.50"></text></g><g><title>Security`SecCertificateDestroy (1 samples, 1.05%)</title><rect x="9.4737%" y="677" width="1.0526%" height="15" fill="rgb(210,229,1)" fg:x="9" fg:w="1"/><text x="9.7237%" y="687.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (1 samples, 1.05%)</title><rect x="9.4737%" y="661" width="1.0526%" height="15" fill="rgb(222,148,37)" fg:x="9" fg:w="1"/><text x="9.7237%" y="671.50"></text></g><g><title>CoreFoundation`CFGetTypeID (1 samples, 1.05%)</title><rect x="10.5263%" y="661" width="1.0526%" height="15" fill="rgb(234,67,33)" fg:x="10" fg:w="1"/><text x="10.7763%" y="671.50"></text></g><g><title>CoreFoundation`__CFDataInit (1 samples, 1.05%)</title><rect x="11.5789%" y="661" width="1.0526%" height="15" fill="rgb(247,98,35)" fg:x="11" fg:w="1"/><text x="11.8289%" y="671.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 1.05%)</title><rect x="11.5789%" y="645" width="1.0526%" height="15" fill="rgb(247,138,52)" fg:x="11" fg:w="1"/><text x="11.8289%" y="655.50"></text></g><g><title>CoreFoundation`__CFStringHash (3 samples, 3.16%)</title><rect x="12.6316%" y="533" width="3.1579%" height="15" fill="rgb(213,79,30)" fg:x="12" fg:w="3"/><text x="12.8816%" y="543.50">Cor..</text></g><g><title>CoreFoundation`-[__NSDictionaryM __setObject:forKey:] (5 samples, 5.26%)</title><rect x="12.6316%" y="549" width="5.2632%" height="15" fill="rgb(246,177,23)" fg:x="12" fg:w="5"/><text x="12.8816%" y="559.50">CoreFo..</text></g><g><title>CoreFoundation`mdict_rehashd (2 samples, 2.11%)</title><rect x="15.7895%" y="533" width="2.1053%" height="15" fill="rgb(230,62,27)" fg:x="15" fg:w="2"/><text x="16.0395%" y="543.50">C..</text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 1.05%)</title><rect x="16.8421%" y="517" width="1.0526%" height="15" fill="rgb(216,154,8)" fg:x="16" fg:w="1"/><text x="17.0921%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 1.05%)</title><rect x="16.8421%" y="501" width="1.0526%" height="15" fill="rgb(244,35,45)" fg:x="16" fg:w="1"/><text x="17.0921%" y="511.50"></text></g><g><title>CoreFoundation`getContentObject (1 samples, 1.05%)</title><rect x="17.8947%" y="549" width="1.0526%" height="15" fill="rgb(251,115,12)" fg:x="17" fg:w="1"/><text x="18.1447%" y="559.50"></text></g><g><title>CoreFoundation`-[__NSCFString retain] (1 samples, 1.05%)</title><rect x="18.9474%" y="533" width="1.0526%" height="15" fill="rgb(240,54,50)" fg:x="18" fg:w="1"/><text x="19.1974%" y="543.50"></text></g><g><title>CoreFoundation`-[__NSDictionaryM __setObject:forKey:] (1 samples, 1.05%)</title><rect x="20.0000%" y="533" width="1.0526%" height="15" fill="rgb(233,84,52)" fg:x="19" fg:w="1"/><text x="20.2500%" y="543.50"></text></g><g><title>CoreFoundation`CFArrayCreateMutable (1 samples, 1.05%)</title><rect x="21.0526%" y="533" width="1.0526%" height="15" fill="rgb(207,117,47)" fg:x="20" fg:w="1"/><text x="21.3026%" y="543.50"></text></g><g><title>CoreFoundation`CFDictionaryGetCount (1 samples, 1.05%)</title><rect x="22.1053%" y="533" width="1.0526%" height="15" fill="rgb(249,43,39)" fg:x="21" fg:w="1"/><text x="22.3553%" y="543.50"></text></g><g><title>CoreFoundation`CF_IS_OBJC (1 samples, 1.05%)</title><rect x="22.1053%" y="517" width="1.0526%" height="15" fill="rgb(209,38,44)" fg:x="21" fg:w="1"/><text x="22.3553%" y="527.50"></text></g><g><title>CoreFoundation`CFDictionarySetValue (1 samples, 1.05%)</title><rect x="23.1579%" y="533" width="1.0526%" height="15" fill="rgb(236,212,23)" fg:x="22" fg:w="1"/><text x="23.4079%" y="543.50"></text></g><g><title>CoreFoundation`CF_IS_OBJC (1 samples, 1.05%)</title><rect x="23.1579%" y="517" width="1.0526%" height="15" fill="rgb(242,79,21)" fg:x="22" fg:w="1"/><text x="23.4079%" y="527.50"></text></g><g><title>CoreFoundation`DYLD-STUB$$malloc_zone_free (1 samples, 1.05%)</title><rect x="24.2105%" y="533" width="1.0526%" height="15" fill="rgb(211,96,35)" fg:x="23" fg:w="1"/><text x="24.4605%" y="543.50"></text></g><g><title>CoreFoundation`getContentObject (2 samples, 2.11%)</title><rect x="25.2632%" y="533" width="2.1053%" height="15" fill="rgb(253,215,40)" fg:x="24" fg:w="2"/><text x="25.5132%" y="543.50">C..</text></g><g><title>libsystem_malloc.dylib`_realloc (2 samples, 2.11%)</title><rect x="32.6316%" y="469" width="2.1053%" height="15" fill="rgb(211,81,21)" fg:x="31" fg:w="2"/><text x="32.8816%" y="479.50">l..</text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (2 samples, 2.11%)</title><rect x="32.6316%" y="453" width="2.1053%" height="15" fill="rgb(208,190,38)" fg:x="31" fg:w="2"/><text x="32.8816%" y="463.50">l..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 1.05%)</title><rect x="33.6842%" y="437" width="1.0526%" height="15" fill="rgb(235,213,38)" fg:x="32" fg:w="1"/><text x="33.9342%" y="447.50"></text></g><g><title>CoreFoundation`CFDataReplaceBytes (3 samples, 3.16%)</title><rect x="32.6316%" y="517" width="3.1579%" height="15" fill="rgb(237,122,38)" fg:x="31" fg:w="3"/><text x="32.8816%" y="527.50">Cor..</text></g><g><title>CoreFoundation`__CFDataGrow (3 samples, 3.16%)</title><rect x="32.6316%" y="501" width="3.1579%" height="15" fill="rgb(244,218,35)" fg:x="31" fg:w="3"/><text x="32.8816%" y="511.50">Cor..</text></g><g><title>CoreFoundation`__CFSafelyReallocate (3 samples, 3.16%)</title><rect x="32.6316%" y="485" width="3.1579%" height="15" fill="rgb(240,68,47)" fg:x="31" fg:w="3"/><text x="32.8816%" y="495.50">Cor..</text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 1.05%)</title><rect x="34.7368%" y="469" width="1.0526%" height="15" fill="rgb(210,16,53)" fg:x="33" fg:w="1"/><text x="34.9868%" y="479.50"></text></g><g><title>CoreFoundation`DYLD-STUB$$memmove (1 samples, 1.05%)</title><rect x="35.7895%" y="517" width="1.0526%" height="15" fill="rgb(235,124,12)" fg:x="34" fg:w="1"/><text x="36.0395%" y="527.50"></text></g><g><title>CoreFoundation`checkForCloseTag (1 samples, 1.05%)</title><rect x="36.8421%" y="517" width="1.0526%" height="15" fill="rgb(224,169,11)" fg:x="35" fg:w="1"/><text x="37.0921%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 2.11%)</title><rect x="37.8947%" y="517" width="2.1053%" height="15" fill="rgb(250,166,2)" fg:x="36" fg:w="2"/><text x="38.1447%" y="527.50">l..</text></g><g><title>CoreFoundation`parseDataTag (13 samples, 13.68%)</title><rect x="27.3684%" y="533" width="13.6842%" height="15" fill="rgb(242,216,29)" fg:x="26" fg:w="13"/><text x="27.6184%" y="543.50">CoreFoundation`parseD..</text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 1.05%)</title><rect x="40.0000%" y="517" width="1.0526%" height="15" fill="rgb(230,116,27)" fg:x="38" fg:w="1"/><text x="40.2500%" y="527.50"></text></g><g><title>CoreFoundation`parseDateTag (2 samples, 2.11%)</title><rect x="41.0526%" y="533" width="2.1053%" height="15" fill="rgb(228,99,48)" fg:x="39" fg:w="2"/><text x="41.3026%" y="543.50">C..</text></g><g><title>CoreFoundation`__CFAbsoluteFromYMD (2 samples, 2.11%)</title><rect x="41.0526%" y="517" width="2.1053%" height="15" fill="rgb(253,11,6)" fg:x="39" fg:w="2"/><text x="41.3026%" y="527.50">C..</text></g><g><title>CoreFoundation`CFStringCreateMutable (2 samples, 2.11%)</title><rect x="45.2632%" y="485" width="2.1053%" height="15" fill="rgb(247,143,39)" fg:x="43" fg:w="2"/><text x="45.5132%" y="495.50">C..</text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (2 samples, 2.11%)</title><rect x="45.2632%" y="469" width="2.1053%" height="15" fill="rgb(236,97,10)" fg:x="43" fg:w="2"/><text x="45.5132%" y="479.50">C..</text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (1 samples, 1.05%)</title><rect x="46.3158%" y="453" width="1.0526%" height="15" fill="rgb(233,208,19)" fg:x="44" fg:w="1"/><text x="46.5658%" y="463.50"></text></g><g><title>CoreFoundation`CF_IS_OBJC (2 samples, 2.11%)</title><rect x="47.3684%" y="485" width="2.1053%" height="15" fill="rgb(216,164,2)" fg:x="45" fg:w="2"/><text x="47.6184%" y="495.50">C..</text></g><g><title>CoreFoundation`CFStringCreateMutableCopy (5 samples, 5.26%)</title><rect x="45.2632%" y="501" width="5.2632%" height="15" fill="rgb(220,129,5)" fg:x="43" fg:w="5"/><text x="45.5132%" y="511.50">CoreFo..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 1.05%)</title><rect x="49.4737%" y="485" width="1.0526%" height="15" fill="rgb(242,17,10)" fg:x="47" fg:w="1"/><text x="49.7237%" y="495.50"></text></g><g><title>CoreFoundation`_CFGetTSDCreateIfNeeded (1 samples, 1.05%)</title><rect x="53.6842%" y="485" width="1.0526%" height="15" fill="rgb(242,107,0)" fg:x="51" fg:w="1"/><text x="53.9342%" y="495.50"></text></g><g><title>CoreFoundation`__CFTSDGetTable (1 samples, 1.05%)</title><rect x="53.6842%" y="469" width="1.0526%" height="15" fill="rgb(251,28,31)" fg:x="51" fg:w="1"/><text x="53.9342%" y="479.50"></text></g><g><title>CoreFoundation`__CFStringCreateImmutableFunnel3 (5 samples, 5.26%)</title><rect x="50.5263%" y="501" width="5.2632%" height="15" fill="rgb(233,223,10)" fg:x="48" fg:w="5"/><text x="50.7763%" y="511.50">CoreFo..</text></g><g><title>libsystem_platform.dylib`_platform_memcmp (1 samples, 1.05%)</title><rect x="54.7368%" y="485" width="1.0526%" height="15" fill="rgb(215,21,27)" fg:x="52" fg:w="1"/><text x="54.9868%" y="495.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (1 samples, 1.05%)</title><rect x="55.7895%" y="469" width="1.0526%" height="15" fill="rgb(232,23,21)" fg:x="53" fg:w="1"/><text x="56.0395%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (1 samples, 1.05%)</title><rect x="55.7895%" y="453" width="1.0526%" height="15" fill="rgb(244,5,23)" fg:x="53" fg:w="1"/><text x="56.0395%" y="463.50"></text></g><g><title>CoreFoundation`__CFAllocatorRespectsHintZeroWhenAllocating (1 samples, 1.05%)</title><rect x="56.8421%" y="469" width="1.0526%" height="15" fill="rgb(226,81,46)" fg:x="54" fg:w="1"/><text x="57.0921%" y="479.50"></text></g><g><title>CoreFoundation`parseXMLElement (15 samples, 15.79%)</title><rect x="43.1579%" y="533" width="15.7895%" height="15" fill="rgb(247,70,30)" fg:x="41" fg:w="15"/><text x="43.4079%" y="543.50">CoreFoundation`parseXMLE..</text></g><g><title>CoreFoundation`parseStringTag (15 samples, 15.79%)</title><rect x="43.1579%" y="517" width="15.7895%" height="15" fill="rgb(212,68,19)" fg:x="41" fg:w="15"/><text x="43.4079%" y="527.50">CoreFoundation`parseStri..</text></g><g><title>Foundation`-[NSPlaceholderMutableString initWithString:] (3 samples, 3.16%)</title><rect x="55.7895%" y="501" width="3.1579%" height="15" fill="rgb(240,187,13)" fg:x="53" fg:w="3"/><text x="56.0395%" y="511.50">Fou..</text></g><g><title>CoreFoundation`CFStringCreateMutable (3 samples, 3.16%)</title><rect x="55.7895%" y="485" width="3.1579%" height="15" fill="rgb(223,113,26)" fg:x="53" fg:w="3"/><text x="56.0395%" y="495.50">Cor..</text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (1 samples, 1.05%)</title><rect x="57.8947%" y="469" width="1.0526%" height="15" fill="rgb(206,192,2)" fg:x="55" fg:w="1"/><text x="58.1447%" y="479.50"></text></g><g><title>CoreFoundation`parseDictTag (39 samples, 41.05%)</title><rect x="18.9474%" y="549" width="41.0526%" height="15" fill="rgb(241,108,4)" fg:x="18" fg:w="39"/><text x="19.1974%" y="559.50">CoreFoundation`parseDictTag</text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 1.05%)</title><rect x="58.9474%" y="533" width="1.0526%" height="15" fill="rgb(247,173,49)" fg:x="56" fg:w="1"/><text x="59.1974%" y="543.50"></text></g><g><title>CoreFoundation`__CFStringChangeSizeMultiple (1 samples, 1.05%)</title><rect x="63.1579%" y="517" width="1.0526%" height="15" fill="rgb(224,114,35)" fg:x="60" fg:w="1"/><text x="63.4079%" y="527.50"></text></g><g><title>Security`Security::KeychainCore::TrustSettings::initFromData (50 samples, 52.63%)</title><rect x="12.6316%" y="661" width="52.6316%" height="15" fill="rgb(245,159,27)" fg:x="12" fg:w="50"/><text x="12.8816%" y="671.50">Security`Security::KeychainCore::TrustSettings::initFromData</text></g><g><title>CoreFoundation`CFPropertyListCreateFromXMLData (50 samples, 52.63%)</title><rect x="12.6316%" y="645" width="52.6316%" height="15" fill="rgb(245,172,44)" fg:x="12" fg:w="50"/><text x="12.8816%" y="655.50">CoreFoundation`CFPropertyListCreateFromXMLData</text></g><g><title>CoreFoundation`_CFPropertyListCreateWithData (50 samples, 52.63%)</title><rect x="12.6316%" y="629" width="52.6316%" height="15" fill="rgb(236,23,11)" fg:x="12" fg:w="50"/><text x="12.8816%" y="639.50">CoreFoundation`_CFPropertyListCreateWithData</text></g><g><title>CoreFoundation`_CFPropertyListCreateFromUTF8Data (50 samples, 52.63%)</title><rect x="12.6316%" y="613" width="52.6316%" height="15" fill="rgb(205,117,38)" fg:x="12" fg:w="50"/><text x="12.8816%" y="623.50">CoreFoundation`_CFPropertyListCreateFromUTF8Data</text></g><g><title>CoreFoundation`parsePListTag (50 samples, 52.63%)</title><rect x="12.6316%" y="597" width="52.6316%" height="15" fill="rgb(237,72,25)" fg:x="12" fg:w="50"/><text x="12.8816%" y="607.50">CoreFoundation`parsePListTag</text></g><g><title>CoreFoundation`parseDictTag (50 samples, 52.63%)</title><rect x="12.6316%" y="581" width="52.6316%" height="15" fill="rgb(244,70,9)" fg:x="12" fg:w="50"/><text x="12.8816%" y="591.50">CoreFoundation`parseDictTag</text></g><g><title>CoreFoundation`parseDictTag (50 samples, 52.63%)</title><rect x="12.6316%" y="565" width="52.6316%" height="15" fill="rgb(217,125,39)" fg:x="12" fg:w="50"/><text x="12.8816%" y="575.50">CoreFoundation`parseDictTag</text></g><g><title>CoreFoundation`parseXMLElement (5 samples, 5.26%)</title><rect x="60.0000%" y="549" width="5.2632%" height="15" fill="rgb(235,36,10)" fg:x="57" fg:w="5"/><text x="60.2500%" y="559.50">CoreFo..</text></g><g><title>CoreFoundation`parseStringTag (5 samples, 5.26%)</title><rect x="60.0000%" y="533" width="5.2632%" height="15" fill="rgb(251,123,47)" fg:x="57" fg:w="5"/><text x="60.2500%" y="543.50">CoreFo..</text></g><g><title>CoreFoundation`__CFStringCreateImmutableFunnel3 (1 samples, 1.05%)</title><rect x="64.2105%" y="517" width="1.0526%" height="15" fill="rgb(221,13,13)" fg:x="61" fg:w="1"/><text x="64.4605%" y="527.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (1 samples, 1.05%)</title><rect x="64.2105%" y="501" width="1.0526%" height="15" fill="rgb(238,131,9)" fg:x="61" fg:w="1"/><text x="64.4605%" y="511.50"></text></g><g><title>libobjc.A.dylib`objc_object::changeIsa (1 samples, 1.05%)</title><rect x="64.2105%" y="485" width="1.0526%" height="15" fill="rgb(211,50,8)" fg:x="61" fg:w="1"/><text x="64.4605%" y="495.50"></text></g><g><title>CoreFoundation`-[__NSCFString isEqual:] (1 samples, 1.05%)</title><rect x="65.2632%" y="629" width="1.0526%" height="15" fill="rgb(245,182,24)" fg:x="62" fg:w="1"/><text x="65.5132%" y="639.50"></text></g><g><title>Security`Security::KeychainCore::TrustSettings::CreateTrustSettings (54 samples, 56.84%)</title><rect x="10.5263%" y="677" width="56.8421%" height="15" fill="rgb(242,14,37)" fg:x="10" fg:w="54"/><text x="10.7763%" y="687.50">Security`Security::KeychainCore::TrustSettings::CreateTrustSettings</text></g><g><title>Security`Security::KeychainCore::TrustSettings::validatePropList (2 samples, 2.11%)</title><rect x="65.2632%" y="661" width="2.1053%" height="15" fill="rgb(246,228,12)" fg:x="62" fg:w="2"/><text x="65.5132%" y="671.50">S..</text></g><g><title>CoreFoundation`-[__NSDictionaryM objectForKey:] (2 samples, 2.11%)</title><rect x="65.2632%" y="645" width="2.1053%" height="15" fill="rgb(213,55,15)" fg:x="62" fg:w="2"/><text x="65.5132%" y="655.50">C..</text></g><g><title>CoreFoundation`__CFStringEqual (1 samples, 1.05%)</title><rect x="66.3158%" y="629" width="1.0526%" height="15" fill="rgb(209,9,3)" fg:x="63" fg:w="1"/><text x="66.5658%" y="639.50"></text></g><g><title>CoreFoundation`_CFRelease (2 samples, 2.11%)</title><rect x="67.3684%" y="597" width="2.1053%" height="15" fill="rgb(230,59,30)" fg:x="64" fg:w="2"/><text x="67.6184%" y="607.50">C..</text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 2.11%)</title><rect x="67.3684%" y="581" width="2.1053%" height="15" fill="rgb(209,121,21)" fg:x="64" fg:w="2"/><text x="67.6184%" y="591.50">l..</text></g><g><title>CoreFoundation`__CFAllocatorSystemDeallocate (1 samples, 1.05%)</title><rect x="69.4737%" y="597" width="1.0526%" height="15" fill="rgb(220,109,13)" fg:x="66" fg:w="1"/><text x="69.7237%" y="607.50"></text></g><g><title>CoreFoundation`cow_cleanup (4 samples, 4.21%)</title><rect x="67.3684%" y="613" width="4.2105%" height="15" fill="rgb(232,18,1)" fg:x="64" fg:w="4"/><text x="67.6184%" y="623.50">CoreF..</text></g><g><title>libobjc.A.dylib`object_getClass (1 samples, 1.05%)</title><rect x="70.5263%" y="597" width="1.0526%" height="15" fill="rgb(215,41,42)" fg:x="67" fg:w="1"/><text x="70.7763%" y="607.50"></text></g><g><title>CoreFoundation`-[__NSDictionaryM dealloc] (5 samples, 5.26%)</title><rect x="67.3684%" y="629" width="5.2632%" height="15" fill="rgb(224,123,36)" fg:x="64" fg:w="5"/><text x="67.6184%" y="639.50">CoreFo..</text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 1.05%)</title><rect x="71.5789%" y="613" width="1.0526%" height="15" fill="rgb(240,125,3)" fg:x="68" fg:w="1"/><text x="71.8289%" y="623.50"></text></g><g><title>CoreFoundation`DYLD-STUB$$objc_destructInstance (1 samples, 1.05%)</title><rect x="72.6316%" y="629" width="1.0526%" height="15" fill="rgb(205,98,50)" fg:x="69" fg:w="1"/><text x="72.8816%" y="639.50"></text></g><g><title>dyld`start (71 samples, 74.74%)</title><rect x="0.0000%" y="949" width="74.7368%" height="15" fill="rgb(205,185,37)" fg:x="0" fg:w="71"/><text x="0.2500%" y="959.50">dyld`start</text></g><g><title>rpcurl`main (70 samples, 73.68%)</title><rect x="1.0526%" y="933" width="73.6842%" height="15" fill="rgb(238,207,15)" fg:x="1" fg:w="70"/><text x="1.3026%" y="943.50">rpcurl`main</text></g><g><title>rpcurl`std::rt::lang_start_internal (70 samples, 73.68%)</title><rect x="1.0526%" y="917" width="73.6842%" height="15" fill="rgb(213,199,42)" fg:x="1" fg:w="70"/><text x="1.3026%" y="927.50">rpcurl`std::rt::lang_start_internal</text></g><g><title>rpcurl`std::rt::lang_start::_{{closure}} (70 samples, 73.68%)</title><rect x="1.0526%" y="901" width="73.6842%" height="15" fill="rgb(235,201,11)" fg:x="1" fg:w="70"/><text x="1.3026%" y="911.50">rpcurl`std::rt::lang_start::_{{closure}}</text></g><g><title>rpcurl`std::sys_common::backtrace::__rust_begin_short_backtrace (70 samples, 73.68%)</title><rect x="1.0526%" y="885" width="73.6842%" height="15" fill="rgb(207,46,11)" fg:x="1" fg:w="70"/><text x="1.3026%" y="895.50">rpcurl`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>rpcurl`rpcurl::main (70 samples, 73.68%)</title><rect x="1.0526%" y="869" width="73.6842%" height="15" fill="rgb(241,35,35)" fg:x="1" fg:w="70"/><text x="1.3026%" y="879.50">rpcurl`rpcurl::main</text></g><g><title>rpcurl`tokio::runtime::runtime::Runtime::block_on (69 samples, 72.63%)</title><rect x="2.1053%" y="853" width="72.6316%" height="15" fill="rgb(243,32,47)" fg:x="2" fg:w="69"/><text x="2.3553%" y="863.50">rpcurl`tokio::runtime::runtime::Runtime::block_on</text></g><g><title>rpcurl`tokio::runtime::context::runtime::enter_runtime (69 samples, 72.63%)</title><rect x="2.1053%" y="837" width="72.6316%" height="15" fill="rgb(247,202,23)" fg:x="2" fg:w="69"/><text x="2.3553%" y="847.50">rpcurl`tokio::runtime::context::runtime::enter_runtime</text></g><g><title>rpcurl`tokio::runtime::park::CachedParkThread::block_on (69 samples, 72.63%)</title><rect x="2.1053%" y="821" width="72.6316%" height="15" fill="rgb(219,102,11)" fg:x="2" fg:w="69"/><text x="2.3553%" y="831.50">rpcurl`tokio::runtime::park::CachedParkThread::block_on</text></g><g><title>rpcurl`tonic::transport::channel::endpoint::Endpoint::tls_config (64 samples, 67.37%)</title><rect x="7.3684%" y="805" width="67.3684%" height="15" fill="rgb(243,110,44)" fg:x="7" fg:w="64"/><text x="7.6184%" y="815.50">rpcurl`tonic::transport::channel::endpoint::Endpoint::tls_config</text></g><g><title>rpcurl`tonic::transport::channel::tls::ClientTlsConfig::into_tls_connector (64 samples, 67.37%)</title><rect x="7.3684%" y="789" width="67.3684%" height="15" fill="rgb(222,74,54)" fg:x="7" fg:w="64"/><text x="7.6184%" y="799.50">rpcurl`tonic::transport::channel::tls::ClientTlsConfig::into_tls_connector</text></g><g><title>rpcurl`tonic::transport::channel::service::tls::TlsConnector::new (64 samples, 67.37%)</title><rect x="7.3684%" y="773" width="67.3684%" height="15" fill="rgb(216,99,12)" fg:x="7" fg:w="64"/><text x="7.6184%" y="783.50">rpcurl`tonic::transport::channel::service::tls::TlsConnector::new</text></g><g><title>rpcurl`rustls_native_certs::load_native_certs (63 samples, 66.32%)</title><rect x="8.4211%" y="757" width="66.3158%" height="15" fill="rgb(226,22,26)" fg:x="8" fg:w="63"/><text x="8.6711%" y="767.50">rpcurl`rustls_native_certs::load_native_certs</text></g><g><title>rpcurl`rustls_native_certs::macos::load_native_certs (63 samples, 66.32%)</title><rect x="8.4211%" y="741" width="66.3158%" height="15" fill="rgb(217,163,10)" fg:x="8" fg:w="63"/><text x="8.6711%" y="751.50">rpcurl`rustls_native_certs::macos::load_native_certs</text></g><g><title>rpcurl`security_framework::trust_settings::TrustSettings::tls_trust_settings_for_certificate (61 samples, 64.21%)</title><rect x="10.5263%" y="725" width="64.2105%" height="15" fill="rgb(213,25,53)" fg:x="10" fg:w="61"/><text x="10.7763%" y="735.50">rpcurl`security_framework::trust_settings::TrustSettings::tls_trust_settings_for_certificate</text></g><g><title>Security`SecTrustSettingsCopyTrustSettings (61 samples, 64.21%)</title><rect x="10.5263%" y="709" width="64.2105%" height="15" fill="rgb(252,105,26)" fg:x="10" fg:w="61"/><text x="10.7763%" y="719.50">Security`SecTrustSettingsCopyTrustSettings</text></g><g><title>Security`tsCopyTrustSettings(__SecCertificate*, SecTrustSettingsDomain, __CFArray const**, __CFDate const**) (61 samples, 64.21%)</title><rect x="10.5263%" y="693" width="64.2105%" height="15" fill="rgb(220,39,43)" fg:x="10" fg:w="61"/><text x="10.7763%" y="703.50">Security`tsCopyTrustSettings(__SecCertificate*, SecTrustSettingsDomain, __CFArray const**, __CFDate const*..</text></g><g><title>Security`Security::KeychainCore::TrustSettings::~TrustSettings (7 samples, 7.37%)</title><rect x="67.3684%" y="677" width="7.3684%" height="15" fill="rgb(229,68,48)" fg:x="64" fg:w="7"/><text x="67.6184%" y="687.50">Security`S..</text></g><g><title>CoreFoundation`-[__NSDictionaryM dealloc] (7 samples, 7.37%)</title><rect x="67.3684%" y="661" width="7.3684%" height="15" fill="rgb(252,8,32)" fg:x="64" fg:w="7"/><text x="67.6184%" y="671.50">CoreFounda..</text></g><g><title>CoreFoundation`cow_cleanup (7 samples, 7.37%)</title><rect x="67.3684%" y="645" width="7.3684%" height="15" fill="rgb(223,20,43)" fg:x="64" fg:w="7"/><text x="67.6184%" y="655.50">CoreFounda..</text></g><g><title>libsystem_malloc.dylib`_free (1 samples, 1.05%)</title><rect x="73.6842%" y="629" width="1.0526%" height="15" fill="rgb(229,81,49)" fg:x="70" fg:w="1"/><text x="73.9342%" y="639.50"></text></g><g><title>Security`DERParseBitString (1 samples, 1.05%)</title><rect x="74.7368%" y="581" width="1.0526%" height="15" fill="rgb(236,28,36)" fg:x="71" fg:w="1"/><text x="74.9868%" y="591.50"></text></g><g><title>Security`SecXPCDictionaryCopyChainOptional (2 samples, 2.11%)</title><rect x="74.7368%" y="629" width="2.1053%" height="15" fill="rgb(249,185,26)" fg:x="71" fg:w="2"/><text x="74.9868%" y="639.50">S..</text></g><g><title>Security`SecCertificateCreateWithXPCArrayAtIndex (2 samples, 2.11%)</title><rect x="74.7368%" y="613" width="2.1053%" height="15" fill="rgb(249,174,33)" fg:x="71" fg:w="2"/><text x="74.9868%" y="623.50">S..</text></g><g><title>Security`SecCertificateCreateWithBytes (2 samples, 2.11%)</title><rect x="74.7368%" y="597" width="2.1053%" height="15" fill="rgb(233,201,37)" fg:x="71" fg:w="2"/><text x="74.9868%" y="607.50">S..</text></g><g><title>Security`SecCertificateParse (1 samples, 1.05%)</title><rect x="75.7895%" y="581" width="1.0526%" height="15" fill="rgb(221,78,26)" fg:x="72" fg:w="1"/><text x="76.0395%" y="591.50"></text></g><g><title>CoreFoundation`__CFDataInit (1 samples, 1.05%)</title><rect x="75.7895%" y="565" width="1.0526%" height="15" fill="rgb(250,127,30)" fg:x="72" fg:w="1"/><text x="76.0395%" y="575.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (1 samples, 1.05%)</title><rect x="75.7895%" y="549" width="1.0526%" height="15" fill="rgb(230,49,44)" fg:x="72" fg:w="1"/><text x="76.0395%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (1 samples, 1.05%)</title><rect x="75.7895%" y="533" width="1.0526%" height="15" fill="rgb(229,67,23)" fg:x="72" fg:w="1"/><text x="76.0395%" y="543.50"></text></g><g><title>Security`__handle_trust_evaluate_xpc_block_invoke_2 (3 samples, 3.16%)</title><rect x="74.7368%" y="645" width="3.1579%" height="15" fill="rgb(249,83,47)" fg:x="71" fg:w="3"/><text x="74.9868%" y="655.50">Sec..</text></g><g><title>Security`SecXPCDictionaryCopyDictionaryOptional (1 samples, 1.05%)</title><rect x="76.8421%" y="629" width="1.0526%" height="15" fill="rgb(215,43,3)" fg:x="73" fg:w="1"/><text x="77.0921%" y="639.50"></text></g><g><title>Security`SecXPCDictionaryCopyDictionaryAndPossiblyMutateMessage (1 samples, 1.05%)</title><rect x="76.8421%" y="613" width="1.0526%" height="15" fill="rgb(238,154,13)" fg:x="73" fg:w="1"/><text x="77.0921%" y="623.50"></text></g><g><title>Security`SecXPCDictionaryCopyPListAndPossiblyMutateMessage (1 samples, 1.05%)</title><rect x="76.8421%" y="597" width="1.0526%" height="15" fill="rgb(219,56,2)" fg:x="73" fg:w="1"/><text x="77.0921%" y="607.50"></text></g><g><title>Security`der_decode_plist (1 samples, 1.05%)</title><rect x="76.8421%" y="581" width="1.0526%" height="15" fill="rgb(233,0,4)" fg:x="73" fg:w="1"/><text x="77.0921%" y="591.50"></text></g><g><title>Security`der_decode_dictionary (1 samples, 1.05%)</title><rect x="76.8421%" y="565" width="1.0526%" height="15" fill="rgb(235,30,7)" fg:x="73" fg:w="1"/><text x="77.0921%" y="575.50"></text></g><g><title>Security`der_decode_plist (1 samples, 1.05%)</title><rect x="76.8421%" y="549" width="1.0526%" height="15" fill="rgb(250,79,13)" fg:x="73" fg:w="1"/><text x="77.0921%" y="559.50"></text></g><g><title>Security`der_decode_date (1 samples, 1.05%)</title><rect x="76.8421%" y="533" width="1.0526%" height="15" fill="rgb(211,146,34)" fg:x="73" fg:w="1"/><text x="77.0921%" y="543.50"></text></g><g><title>Security`der_decode_commontime_body (1 samples, 1.05%)</title><rect x="76.8421%" y="517" width="1.0526%" height="15" fill="rgb(228,22,38)" fg:x="73" fg:w="1"/><text x="77.0921%" y="527.50"></text></g><g><title>Security`SecCFCalendarDoWithZuluCalendar (1 samples, 1.05%)</title><rect x="76.8421%" y="501" width="1.0526%" height="15" fill="rgb(235,168,5)" fg:x="73" fg:w="1"/><text x="77.0921%" y="511.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (1 samples, 1.05%)</title><rect x="76.8421%" y="485" width="1.0526%" height="15" fill="rgb(221,155,16)" fg:x="73" fg:w="1"/><text x="77.0921%" y="495.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 1.05%)</title><rect x="76.8421%" y="469" width="1.0526%" height="15" fill="rgb(215,215,53)" fg:x="73" fg:w="1"/><text x="77.0921%" y="479.50"></text></g><g><title>Security`__SecCFCalendarDoWithZuluCalendar_block_invoke (1 samples, 1.05%)</title><rect x="76.8421%" y="453" width="1.0526%" height="15" fill="rgb(223,4,10)" fg:x="73" fg:w="1"/><text x="77.0921%" y="463.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 1.05%)</title><rect x="76.8421%" y="437" width="1.0526%" height="15" fill="rgb(234,103,6)" fg:x="73" fg:w="1"/><text x="77.0921%" y="447.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 1.05%)</title><rect x="76.8421%" y="421" width="1.0526%" height="15" fill="rgb(227,97,0)" fg:x="73" fg:w="1"/><text x="77.0921%" y="431.50"></text></g><g><title>Security`__SecCFCalendarGetZulu_block_invoke (1 samples, 1.05%)</title><rect x="76.8421%" y="405" width="1.0526%" height="15" fill="rgb(234,150,53)" fg:x="73" fg:w="1"/><text x="77.0921%" y="415.50"></text></g><g><title>Foundation`@objc _NSSwiftCalendar.timeZone.setter (1 samples, 1.05%)</title><rect x="76.8421%" y="389" width="1.0526%" height="15" fill="rgb(228,201,54)" fg:x="73" fg:w="1"/><text x="77.0921%" y="399.50"></text></g><g><title>Foundation`partial apply for closure #1 in _NSSwiftCalendar.timeZone.setter (1 samples, 1.05%)</title><rect x="76.8421%" y="373" width="1.0526%" height="15" fill="rgb(222,22,37)" fg:x="73" fg:w="1"/><text x="77.0921%" y="383.50"></text></g><g><title>Foundation`closure #1 in _NSSwiftCalendar.timeZone.setter (1 samples, 1.05%)</title><rect x="76.8421%" y="357" width="1.0526%" height="15" fill="rgb(237,53,32)" fg:x="73" fg:w="1"/><text x="77.0921%" y="367.50"></text></g><g><title>Foundation`Calendar.timeZone.setter (1 samples, 1.05%)</title><rect x="76.8421%" y="341" width="1.0526%" height="15" fill="rgb(233,25,53)" fg:x="73" fg:w="1"/><text x="77.0921%" y="351.50"></text></g><g><title>Foundation`_CalendarICU.copy(changingLocale:changingTimeZone:changingFirstWeekday:changingMinimumDaysInFirstWeek:) (1 samples, 1.05%)</title><rect x="76.8421%" y="325" width="1.0526%" height="15" fill="rgb(210,40,34)" fg:x="73" fg:w="1"/><text x="77.0921%" y="335.50"></text></g><g><title>Foundation`closure #1 in LockedState&lt;A&gt;.withLock&lt;A&gt;(_:)specialized partial apply (1 samples, 1.05%)</title><rect x="76.8421%" y="309" width="1.0526%" height="15" fill="rgb(241,220,44)" fg:x="73" fg:w="1"/><text x="77.0921%" y="319.50"></text></g><g><title>Foundation`partial apply for specialized closure #1 in LockedState&lt;A&gt;.withLock&lt;A&gt;(_:) (1 samples, 1.05%)</title><rect x="76.8421%" y="293" width="1.0526%" height="15" fill="rgb(235,28,35)" fg:x="73" fg:w="1"/><text x="77.0921%" y="303.50"></text></g><g><title>Foundation`closure #1 in _CalendarICU.copy(changingLocale:changingTimeZone:changingFirstWeekday:changingMinimumDaysInFirstWeek:)partial apply (1 samples, 1.05%)</title><rect x="76.8421%" y="277" width="1.0526%" height="15" fill="rgb(210,56,17)" fg:x="73" fg:w="1"/><text x="77.0921%" y="287.50"></text></g><g><title>Foundation`partial apply for closure #1 in _CalendarICU.copy(changingLocale:changingTimeZone:changingFirstWeekday:changingMinimumDaysInFirstWeek:) (1 samples, 1.05%)</title><rect x="76.8421%" y="261" width="1.0526%" height="15" fill="rgb(224,130,29)" fg:x="73" fg:w="1"/><text x="77.0921%" y="271.50"></text></g><g><title>Foundation`closure #1 in _CalendarICU.copy(changingLocale:changingTimeZone:changingFirstWeekday:changingMinimumDaysInFirstWeek:) (1 samples, 1.05%)</title><rect x="76.8421%" y="245" width="1.0526%" height="15" fill="rgb(235,212,8)" fg:x="73" fg:w="1"/><text x="77.0921%" y="255.50"></text></g><g><title>Foundation`protocol witness for _LocaleProtocol.init(identifier:prefs:) in conformance _LocaleICU (1 samples, 1.05%)</title><rect x="76.8421%" y="229" width="1.0526%" height="15" fill="rgb(223,33,50)" fg:x="73" fg:w="1"/><text x="77.0921%" y="239.50"></text></g><g><title>Foundation`_LocaleICU.init(identifier:prefs:) (1 samples, 1.05%)</title><rect x="76.8421%" y="213" width="1.0526%" height="15" fill="rgb(219,149,13)" fg:x="73" fg:w="1"/><text x="77.0921%" y="223.50"></text></g><g><title>libswiftCore.dylib`String._bridgeToObjectiveCImpl() (1 samples, 1.05%)</title><rect x="76.8421%" y="197" width="1.0526%" height="15" fill="rgb(250,156,29)" fg:x="73" fg:w="1"/><text x="77.0921%" y="207.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 1.05%)</title><rect x="76.8421%" y="181" width="1.0526%" height="15" fill="rgb(216,193,19)" fg:x="73" fg:w="1"/><text x="77.0921%" y="191.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 1.05%)</title><rect x="76.8421%" y="165" width="1.0526%" height="15" fill="rgb(216,135,14)" fg:x="73" fg:w="1"/><text x="77.0921%" y="175.50"></text></g><g><title>libswiftCore.dylib`one-time initialization function for _bridgeInitializedSuccessfully (1 samples, 1.05%)</title><rect x="76.8421%" y="149" width="1.0526%" height="15" fill="rgb(241,47,5)" fg:x="73" fg:w="1"/><text x="77.0921%" y="159.50"></text></g><g><title>libswiftCore.dylib`swift_stdlib_connectNSBaseClasses (1 samples, 1.05%)</title><rect x="76.8421%" y="133" width="1.0526%" height="15" fill="rgb(233,42,35)" fg:x="73" fg:w="1"/><text x="77.0921%" y="143.50"></text></g><g><title>libobjc.A.dylib`look_up_class (1 samples, 1.05%)</title><rect x="76.8421%" y="117" width="1.0526%" height="15" fill="rgb(231,13,6)" fg:x="73" fg:w="1"/><text x="77.0921%" y="127.50"></text></g><g><title>libobjc.A.dylib`getClassExceptSomeSwift(char const*) (1 samples, 1.05%)</title><rect x="76.8421%" y="101" width="1.0526%" height="15" fill="rgb(207,181,40)" fg:x="73" fg:w="1"/><text x="77.0921%" y="111.50"></text></g><g><title>libobjc.A.dylib`getPreoptimizedClass (1 samples, 1.05%)</title><rect x="76.8421%" y="85" width="1.0526%" height="15" fill="rgb(254,173,49)" fg:x="73" fg:w="1"/><text x="77.0921%" y="95.50"></text></g><g><title>dyld`dyld4::APIs::_dyld_for_each_objc_class(char const*, void  (1 samples, 1.05%)</title><rect x="76.8421%" y="69" width="1.0526%" height="15" fill="rgb(221,1,38)" fg:x="73" fg:w="1"/><text x="77.0921%" y="79.50"></text></g><g><title>dyld`objc::ObjectHashTable::forEachObject(char const*, void  (1 samples, 1.05%)</title><rect x="76.8421%" y="53" width="1.0526%" height="15" fill="rgb(206,124,46)" fg:x="73" fg:w="1"/><text x="77.0921%" y="63.50"></text></g><g><title>dyld`strcmp (1 samples, 1.05%)</title><rect x="76.8421%" y="37" width="1.0526%" height="15" fill="rgb(249,21,11)" fg:x="73" fg:w="1"/><text x="77.0921%" y="47.50"></text></g><g><title>Security`security_fw_send_message_with_reply_sync_inner (1 samples, 1.05%)</title><rect x="77.8947%" y="645" width="1.0526%" height="15" fill="rgb(222,201,40)" fg:x="74" fg:w="1"/><text x="78.1447%" y="655.50"></text></g><g><title>libxpc.dylib`xpc_connection_send_message_with_reply_sync (1 samples, 1.05%)</title><rect x="77.8947%" y="629" width="1.0526%" height="15" fill="rgb(235,61,29)" fg:x="74" fg:w="1"/><text x="78.1447%" y="639.50"></text></g><g><title>libdispatch.dylib`dispatch_mach_send_with_result_and_wait_for_reply (1 samples, 1.05%)</title><rect x="77.8947%" y="613" width="1.0526%" height="15" fill="rgb(219,207,3)" fg:x="74" fg:w="1"/><text x="78.1447%" y="623.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 1.05%)</title><rect x="77.8947%" y="597" width="1.0526%" height="15" fill="rgb(222,56,46)" fg:x="74" fg:w="1"/><text x="78.1447%" y="607.50"></text></g><g><title>Security`SecTrustEvaluateInternal (5 samples, 5.26%)</title><rect x="74.7368%" y="805" width="5.2632%" height="15" fill="rgb(239,76,54)" fg:x="71" fg:w="5"/><text x="74.9868%" y="815.50">Securi..</text></g><g><title>Security`SecTrustEvaluateIfNecessary (5 samples, 5.26%)</title><rect x="74.7368%" y="789" width="5.2632%" height="15" fill="rgb(231,124,27)" fg:x="71" fg:w="5"/><text x="74.9868%" y="799.50">Securi..</text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (5 samples, 5.26%)</title><rect x="74.7368%" y="773" width="5.2632%" height="15" fill="rgb(249,195,6)" fg:x="71" fg:w="5"/><text x="74.9868%" y="783.50">libdis..</text></g><g><title>libdispatch.dylib`_dispatch_client_callout (5 samples, 5.26%)</title><rect x="74.7368%" y="757" width="5.2632%" height="15" fill="rgb(237,174,47)" fg:x="71" fg:w="5"/><text x="74.9868%" y="767.50">libdis..</text></g><g><title>Security`__SecTrustEvaluateIfNecessary_block_invoke (5 samples, 5.26%)</title><rect x="74.7368%" y="741" width="5.2632%" height="15" fill="rgb(206,201,31)" fg:x="71" fg:w="5"/><text x="74.9868%" y="751.50">Securi..</text></g><g><title>libsystem_trace.dylib`_os_activity_initiate_impl (5 samples, 5.26%)</title><rect x="74.7368%" y="725" width="5.2632%" height="15" fill="rgb(231,57,52)" fg:x="71" fg:w="5"/><text x="74.9868%" y="735.50">libsys..</text></g><g><title>Security`__SecTrustEvaluateIfNecessary_block_invoke_2 (5 samples, 5.26%)</title><rect x="74.7368%" y="709" width="5.2632%" height="15" fill="rgb(248,177,22)" fg:x="71" fg:w="5"/><text x="74.9868%" y="719.50">Securi..</text></g><g><title>Security`SecOSStatusWith (5 samples, 5.26%)</title><rect x="74.7368%" y="693" width="5.2632%" height="15" fill="rgb(215,211,37)" fg:x="71" fg:w="5"/><text x="74.9868%" y="703.50">Securi..</text></g><g><title>Security`__SecTrustEvaluateIfNecessary_block_invoke_3 (5 samples, 5.26%)</title><rect x="74.7368%" y="677" width="5.2632%" height="15" fill="rgb(241,128,51)" fg:x="71" fg:w="5"/><text x="74.9868%" y="687.50">Securi..</text></g><g><title>Security`securityd_send_sync_and_do (5 samples, 5.26%)</title><rect x="74.7368%" y="661" width="5.2632%" height="15" fill="rgb(227,165,31)" fg:x="71" fg:w="5"/><text x="74.9868%" y="671.50">Securi..</text></g><g><title>libxpc.dylib`-[OS_xpc_object dealloc] (1 samples, 1.05%)</title><rect x="78.9474%" y="645" width="1.0526%" height="15" fill="rgb(228,167,24)" fg:x="75" fg:w="1"/><text x="79.1974%" y="655.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_dispose (1 samples, 1.05%)</title><rect x="78.9474%" y="629" width="1.0526%" height="15" fill="rgb(228,143,12)" fg:x="75" fg:w="1"/><text x="79.1974%" y="639.50"></text></g><g><title>libxpc.dylib`_xpc_dictionary_node_free (1 samples, 1.05%)</title><rect x="78.9474%" y="613" width="1.0526%" height="15" fill="rgb(249,149,8)" fg:x="75" fg:w="1"/><text x="79.1974%" y="623.50"></text></g><g><title>libxpc.dylib`-[OS_xpc_object dealloc] (1 samples, 1.05%)</title><rect x="78.9474%" y="597" width="1.0526%" height="15" fill="rgb(243,35,44)" fg:x="75" fg:w="1"/><text x="79.1974%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 1.05%)</title><rect x="78.9474%" y="581" width="1.0526%" height="15" fill="rgb(246,89,9)" fg:x="75" fg:w="1"/><text x="79.1974%" y="591.50"></text></g><g><title>Security`Security::KeychainCore::DynamicDLDBList::searchList (1 samples, 1.05%)</title><rect x="80.0000%" y="789" width="1.0526%" height="15" fill="rgb(233,213,13)" fg:x="76" fg:w="1"/><text x="80.2500%" y="799.50"></text></g><g><title>Security`Security::CssmClient::Table&lt;Security::MDSClient::Common&gt;::startQuery (1 samples, 1.05%)</title><rect x="80.0000%" y="773" width="1.0526%" height="15" fill="rgb(233,141,41)" fg:x="76" fg:w="1"/><text x="80.2500%" y="783.50"></text></g><g><title>Security`Security::MDSClient::Directory::dlGetFirst (1 samples, 1.05%)</title><rect x="80.0000%" y="757" width="1.0526%" height="15" fill="rgb(239,167,4)" fg:x="76" fg:w="1"/><text x="80.2500%" y="767.50"></text></g><g><title>Security`Security::MDSClient::Directory::cdsa (1 samples, 1.05%)</title><rect x="80.0000%" y="741" width="1.0526%" height="15" fill="rgb(209,217,16)" fg:x="76" fg:w="1"/><text x="80.2500%" y="751.50"></text></g><g><title>Security`mds_DbOpen(long, char const*, cssm_net_address const*, unsigned int, cssm_access_credentials const*, void const*, long*) (1 samples, 1.05%)</title><rect x="80.0000%" y="725" width="1.0526%" height="15" fill="rgb(219,88,35)" fg:x="76" fg:w="1"/><text x="80.2500%" y="735.50"></text></g><g><title>Security`Security::MDSSession::DbOpen (1 samples, 1.05%)</title><rect x="80.0000%" y="709" width="1.0526%" height="15" fill="rgb(220,193,23)" fg:x="76" fg:w="1"/><text x="80.2500%" y="719.50"></text></g><g><title>Security`Security::MDSSession::updateDataBases (1 samples, 1.05%)</title><rect x="80.0000%" y="693" width="1.0526%" height="15" fill="rgb(230,90,52)" fg:x="76" fg:w="1"/><text x="80.2500%" y="703.50"></text></g><g><title>Security`Security::MDSSession::DbFilesInfo::updateForBundleDir (1 samples, 1.05%)</title><rect x="80.0000%" y="677" width="1.0526%" height="15" fill="rgb(252,106,19)" fg:x="76" fg:w="1"/><text x="80.2500%" y="687.50"></text></g><g><title>libsystem_c.dylib`readdir (1 samples, 1.05%)</title><rect x="80.0000%" y="661" width="1.0526%" height="15" fill="rgb(206,74,20)" fg:x="76" fg:w="1"/><text x="80.2500%" y="671.50"></text></g><g><title>libsystem_kernel.dylib`__getdirentries64 (1 samples, 1.05%)</title><rect x="80.0000%" y="645" width="1.0526%" height="15" fill="rgb(230,138,44)" fg:x="76" fg:w="1"/><text x="80.2500%" y="655.50"></text></g><g><title>Security`Security::KeychainCore::StorageManager::getSearchList(std::__1::vector&lt;Security::KeychainCore::Keychain, std::__1::allocator (2 samples, 2.11%)</title><rect x="80.0000%" y="805" width="2.1053%" height="15" fill="rgb(235,182,43)" fg:x="76" fg:w="2"/><text x="80.2500%" y="815.50">S..</text></g><g><title>Security`Security::KeychainCore::StorageManager::keychain (1 samples, 1.05%)</title><rect x="81.0526%" y="789" width="1.0526%" height="15" fill="rgb(242,16,51)" fg:x="77" fg:w="1"/><text x="81.3026%" y="799.50"></text></g><g><title>Security`Security::KeychainCore::StorageManager::mungeDLDbIdentifier (1 samples, 1.05%)</title><rect x="81.0526%" y="773" width="1.0526%" height="15" fill="rgb(248,9,4)" fg:x="77" fg:w="1"/><text x="81.3026%" y="783.50"></text></g><g><title>Security`Security::DLDbIdentifier::DLDbIdentifier (1 samples, 1.05%)</title><rect x="81.0526%" y="757" width="1.0526%" height="15" fill="rgb(210,31,22)" fg:x="77" fg:w="1"/><text x="81.3026%" y="767.50"></text></g><g><title>Security`Security::DbName::DbName (1 samples, 1.05%)</title><rect x="81.0526%" y="741" width="1.0526%" height="15" fill="rgb(239,54,39)" fg:x="77" fg:w="1"/><text x="81.3026%" y="751.50"></text></g><g><title>Security`Security::DbName::CanonicalizeName (1 samples, 1.05%)</title><rect x="81.0526%" y="725" width="1.0526%" height="15" fill="rgb(230,99,41)" fg:x="77" fg:w="1"/><text x="81.3026%" y="735.50"></text></g><g><title>Security`Security::cached_realpath (1 samples, 1.05%)</title><rect x="81.0526%" y="709" width="1.0526%" height="15" fill="rgb(253,106,12)" fg:x="77" fg:w="1"/><text x="81.3026%" y="719.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (1 samples, 1.05%)</title><rect x="81.0526%" y="693" width="1.0526%" height="15" fill="rgb(213,46,41)" fg:x="77" fg:w="1"/><text x="81.3026%" y="703.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 1.05%)</title><rect x="81.0526%" y="677" width="1.0526%" height="15" fill="rgb(215,133,35)" fg:x="77" fg:w="1"/><text x="81.3026%" y="687.50"></text></g><g><title>Security`invocation function for block in Security::cached_realpath (1 samples, 1.05%)</title><rect x="81.0526%" y="661" width="1.0526%" height="15" fill="rgb(213,28,5)" fg:x="77" fg:w="1"/><text x="81.3026%" y="671.50"></text></g><g><title>CoreFoundation`DYLD-STUB$$memmove (1 samples, 1.05%)</title><rect x="81.0526%" y="645" width="1.0526%" height="15" fill="rgb(215,77,49)" fg:x="77" fg:w="1"/><text x="81.3026%" y="655.50"></text></g><g><title>Security`SecCertificateCreateWithData (1 samples, 1.05%)</title><rect x="82.1053%" y="789" width="1.0526%" height="15" fill="rgb(248,100,22)" fg:x="78" fg:w="1"/><text x="82.3553%" y="799.50"></text></g><g><title>Security`SecCertificateParse (1 samples, 1.05%)</title><rect x="82.1053%" y="773" width="1.0526%" height="15" fill="rgb(208,67,9)" fg:x="78" fg:w="1"/><text x="82.3553%" y="783.50"></text></g><g><title>Security`DERParseSequenceContentToObject (1 samples, 1.05%)</title><rect x="82.1053%" y="757" width="1.0526%" height="15" fill="rgb(219,133,21)" fg:x="78" fg:w="1"/><text x="82.3553%" y="767.50"></text></g><g><title>Security`Security::CssmClient::DbDbCursorImpl::next (1 samples, 1.05%)</title><rect x="83.1579%" y="773" width="1.0526%" height="15" fill="rgb(246,46,29)" fg:x="79" fg:w="1"/><text x="83.4079%" y="783.50"></text></g><g><title>Security`CSSM_DL_DataGetFirst (1 samples, 1.05%)</title><rect x="83.1579%" y="757" width="1.0526%" height="15" fill="rgb(246,185,52)" fg:x="79" fg:w="1"/><text x="83.4079%" y="767.50"></text></g><g><title>Security`cssm_DataGetFirst(cssm_dl_db_handle, cssm_query const*, long*, cssm_db_record_attribute_data*, cssm_data*, cssm_db_unique_record**) (1 samples, 1.05%)</title><rect x="83.1579%" y="741" width="1.0526%" height="15" fill="rgb(252,136,11)" fg:x="79" fg:w="1"/><text x="83.4079%" y="751.50"></text></g><g><title>Security`SSDLSession::DataGetFirst (1 samples, 1.05%)</title><rect x="83.1579%" y="725" width="1.0526%" height="15" fill="rgb(219,138,53)" fg:x="79" fg:w="1"/><text x="83.4079%" y="735.50"></text></g><g><title>Security`SSDLSession::makeSSUniqueRecord (1 samples, 1.05%)</title><rect x="83.1579%" y="709" width="1.0526%" height="15" fill="rgb(211,51,23)" fg:x="79" fg:w="1"/><text x="83.4079%" y="719.50"></text></g><g><title>libc++abi.dylib`__dynamic_cast (1 samples, 1.05%)</title><rect x="83.1579%" y="693" width="1.0526%" height="15" fill="rgb(247,221,28)" fg:x="79" fg:w="1"/><text x="83.4079%" y="703.50"></text></g><g><title>libc++abi.dylib`__cxxabiv1::__si_class_type_info::search_above_dst (1 samples, 1.05%)</title><rect x="83.1579%" y="677" width="1.0526%" height="15" fill="rgb(251,222,45)" fg:x="79" fg:w="1"/><text x="83.4079%" y="687.50"></text></g><g><title>libc++abi.dylib`std::type_info::operator==[abi:ue170006] (1 samples, 1.05%)</title><rect x="83.1579%" y="661" width="1.0526%" height="15" fill="rgb(217,162,53)" fg:x="79" fg:w="1"/><text x="83.4079%" y="671.50"></text></g><g><title>Security`CSSM_DL_DbOpen (1 samples, 1.05%)</title><rect x="84.2105%" y="741" width="1.0526%" height="15" fill="rgb(229,93,14)" fg:x="80" fg:w="1"/><text x="84.4605%" y="751.50"></text></g><g><title>Security`cssm_DbOpen(long, char const*, cssm_net_address const*, unsigned int, cssm_access_credentials const*, void const*, long*) (1 samples, 1.05%)</title><rect x="84.2105%" y="725" width="1.0526%" height="15" fill="rgb(209,67,49)" fg:x="80" fg:w="1"/><text x="84.4605%" y="735.50"></text></g><g><title>Security`SSDLSession::DbOpen (1 samples, 1.05%)</title><rect x="84.2105%" y="709" width="1.0526%" height="15" fill="rgb(213,87,29)" fg:x="80" fg:w="1"/><text x="84.4605%" y="719.50"></text></g><g><title>Security`SSDatabaseImpl::load (1 samples, 1.05%)</title><rect x="84.2105%" y="693" width="1.0526%" height="15" fill="rgb(205,151,52)" fg:x="80" fg:w="1"/><text x="84.4605%" y="703.50"></text></g><g><title>Security`Security::CssmClient::DbImpl::open (1 samples, 1.05%)</title><rect x="84.2105%" y="677" width="1.0526%" height="15" fill="rgb(253,215,39)" fg:x="80" fg:w="1"/><text x="84.4605%" y="687.50"></text></g><g><title>Security`CSSM_DL_DbOpen (1 samples, 1.05%)</title><rect x="84.2105%" y="661" width="1.0526%" height="15" fill="rgb(221,220,41)" fg:x="80" fg:w="1"/><text x="84.4605%" y="671.50"></text></g><g><title>Security`cssm_DbOpen(long, char const*, cssm_net_address const*, unsigned int, cssm_access_credentials const*, void const*, long*) (1 samples, 1.05%)</title><rect x="84.2105%" y="645" width="1.0526%" height="15" fill="rgb(218,133,21)" fg:x="80" fg:w="1"/><text x="84.4605%" y="655.50"></text></g><g><title>Security`Security::DatabaseSession::DbOpen (1 samples, 1.05%)</title><rect x="84.2105%" y="629" width="1.0526%" height="15" fill="rgb(221,193,43)" fg:x="80" fg:w="1"/><text x="84.4605%" y="639.50"></text></g><g><title>Security`Security::DatabaseManager::dbOpen (1 samples, 1.05%)</title><rect x="84.2105%" y="613" width="1.0526%" height="15" fill="rgb(240,128,52)" fg:x="80" fg:w="1"/><text x="84.4605%" y="623.50"></text></g><g><title>Security`Security::Database::_dbOpen (1 samples, 1.05%)</title><rect x="84.2105%" y="597" width="1.0526%" height="15" fill="rgb(253,114,12)" fg:x="80" fg:w="1"/><text x="84.4605%" y="607.50"></text></g><g><title>Security`Security::AppleDatabase::dbOpen (1 samples, 1.05%)</title><rect x="84.2105%" y="581" width="1.0526%" height="15" fill="rgb(215,223,47)" fg:x="80" fg:w="1"/><text x="84.4605%" y="591.50"></text></g><g><title>Security`Security::DbModifier::getDbVersion (1 samples, 1.05%)</title><rect x="84.2105%" y="565" width="1.0526%" height="15" fill="rgb(248,225,23)" fg:x="80" fg:w="1"/><text x="84.4605%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`read (1 samples, 1.05%)</title><rect x="84.2105%" y="549" width="1.0526%" height="15" fill="rgb(250,108,0)" fg:x="80" fg:w="1"/><text x="84.4605%" y="559.50"></text></g><g><title>Security`Security::CssmClient::DbImpl::activate (2 samples, 2.11%)</title><rect x="84.2105%" y="773" width="2.1053%" height="15" fill="rgb(228,208,7)" fg:x="80" fg:w="2"/><text x="84.4605%" y="783.50">S..</text></g><g><title>Security`Security::CssmClient::DbImpl::open (2 samples, 2.11%)</title><rect x="84.2105%" y="757" width="2.1053%" height="15" fill="rgb(244,45,10)" fg:x="80" fg:w="2"/><text x="84.4605%" y="767.50">S..</text></g><g><title>Security`Security::KeychainCore::KeychainImpl::defaultCredentials (1 samples, 1.05%)</title><rect x="85.2632%" y="741" width="1.0526%" height="15" fill="rgb(207,125,25)" fg:x="81" fg:w="1"/><text x="85.5132%" y="751.50"></text></g><g><title>Security`Security::KeychainCore::KeychainImpl::keychainSchema (1 samples, 1.05%)</title><rect x="85.2632%" y="725" width="1.0526%" height="15" fill="rgb(210,195,18)" fg:x="81" fg:w="1"/><text x="85.5132%" y="735.50"></text></g><g><title>Security`Security::CssmClient::DbDbCursorImpl::next (1 samples, 1.05%)</title><rect x="85.2632%" y="709" width="1.0526%" height="15" fill="rgb(249,80,12)" fg:x="81" fg:w="1"/><text x="85.5132%" y="719.50"></text></g><g><title>Security`CSSM_DL_DataGetNext (1 samples, 1.05%)</title><rect x="85.2632%" y="693" width="1.0526%" height="15" fill="rgb(221,65,9)" fg:x="81" fg:w="1"/><text x="85.5132%" y="703.50"></text></g><g><title>Security`cssm_DataGetNext(cssm_dl_db_handle, long, cssm_db_record_attribute_data*, cssm_data*, cssm_db_unique_record**) (1 samples, 1.05%)</title><rect x="85.2632%" y="677" width="1.0526%" height="15" fill="rgb(235,49,36)" fg:x="81" fg:w="1"/><text x="85.5132%" y="687.50"></text></g><g><title>Security`SSDLSession::DataGetNext (1 samples, 1.05%)</title><rect x="85.2632%" y="661" width="1.0526%" height="15" fill="rgb(225,32,20)" fg:x="81" fg:w="1"/><text x="85.5132%" y="671.50"></text></g><g><title>Security`CSSM_DL_DataGetNext (1 samples, 1.05%)</title><rect x="85.2632%" y="645" width="1.0526%" height="15" fill="rgb(215,141,46)" fg:x="81" fg:w="1"/><text x="85.5132%" y="655.50"></text></g><g><title>Security`cssm_DataGetNext(cssm_dl_db_handle, long, cssm_db_record_attribute_data*, cssm_data*, cssm_db_unique_record**) (1 samples, 1.05%)</title><rect x="85.2632%" y="629" width="1.0526%" height="15" fill="rgb(250,160,47)" fg:x="81" fg:w="1"/><text x="85.5132%" y="639.50"></text></g><g><title>Security`Security::DatabaseSession::DataGetNext (1 samples, 1.05%)</title><rect x="85.2632%" y="613" width="1.0526%" height="15" fill="rgb(216,222,40)" fg:x="81" fg:w="1"/><text x="85.5132%" y="623.50"></text></g><g><title>Security`Security::AppleDatabase::dataGetNext (1 samples, 1.05%)</title><rect x="85.2632%" y="597" width="1.0526%" height="15" fill="rgb(234,217,39)" fg:x="81" fg:w="1"/><text x="85.5132%" y="607.50"></text></g><g><title>Security`Security::LinearCursor::next (1 samples, 1.05%)</title><rect x="85.2632%" y="581" width="1.0526%" height="15" fill="rgb(207,178,40)" fg:x="81" fg:w="1"/><text x="85.5132%" y="591.50"></text></g><g><title>libc++abi.dylib`__dynamic_cast (1 samples, 1.05%)</title><rect x="85.2632%" y="565" width="1.0526%" height="15" fill="rgb(221,136,13)" fg:x="81" fg:w="1"/><text x="85.5132%" y="575.50"></text></g><g><title>Security`CSSM_DL_DbOpen (1 samples, 1.05%)</title><rect x="86.3158%" y="709" width="1.0526%" height="15" fill="rgb(249,199,10)" fg:x="82" fg:w="1"/><text x="86.5658%" y="719.50"></text></g><g><title>Security`cssm_DbOpen(long, char const*, cssm_net_address const*, unsigned int, cssm_access_credentials const*, void const*, long*) (1 samples, 1.05%)</title><rect x="86.3158%" y="693" width="1.0526%" height="15" fill="rgb(249,222,13)" fg:x="82" fg:w="1"/><text x="86.5658%" y="703.50"></text></g><g><title>Security`SSDLSession::DbOpen (1 samples, 1.05%)</title><rect x="86.3158%" y="677" width="1.0526%" height="15" fill="rgb(244,185,38)" fg:x="82" fg:w="1"/><text x="86.5658%" y="687.50"></text></g><g><title>Security`SSDatabaseImpl::load (1 samples, 1.05%)</title><rect x="86.3158%" y="661" width="1.0526%" height="15" fill="rgb(236,202,9)" fg:x="82" fg:w="1"/><text x="86.5658%" y="671.50"></text></g><g><title>Security`Security::CssmClient::DbImpl::open (1 samples, 1.05%)</title><rect x="86.3158%" y="645" width="1.0526%" height="15" fill="rgb(250,229,37)" fg:x="82" fg:w="1"/><text x="86.5658%" y="655.50"></text></g><g><title>Security`CSSM_DL_DbOpen (1 samples, 1.05%)</title><rect x="86.3158%" y="629" width="1.0526%" height="15" fill="rgb(206,174,23)" fg:x="82" fg:w="1"/><text x="86.5658%" y="639.50"></text></g><g><title>Security`cssm_DbOpen(long, char const*, cssm_net_address const*, unsigned int, cssm_access_credentials const*, void const*, long*) (1 samples, 1.05%)</title><rect x="86.3158%" y="613" width="1.0526%" height="15" fill="rgb(211,33,43)" fg:x="82" fg:w="1"/><text x="86.5658%" y="623.50"></text></g><g><title>Security`Security::DatabaseSession::DbOpen (1 samples, 1.05%)</title><rect x="86.3158%" y="597" width="1.0526%" height="15" fill="rgb(245,58,50)" fg:x="82" fg:w="1"/><text x="86.5658%" y="607.50"></text></g><g><title>Security`Security::DatabaseManager::dbOpen (1 samples, 1.05%)</title><rect x="86.3158%" y="581" width="1.0526%" height="15" fill="rgb(244,68,36)" fg:x="82" fg:w="1"/><text x="86.5658%" y="591.50"></text></g><g><title>Security`Security::Database::_dbOpen (1 samples, 1.05%)</title><rect x="86.3158%" y="565" width="1.0526%" height="15" fill="rgb(232,229,15)" fg:x="82" fg:w="1"/><text x="86.5658%" y="575.50"></text></g><g><title>Security`Security::AppleDatabase::dbOpen (1 samples, 1.05%)</title><rect x="86.3158%" y="549" width="1.0526%" height="15" fill="rgb(254,30,23)" fg:x="82" fg:w="1"/><text x="86.5658%" y="559.50"></text></g><g><title>Security`Security::DbModifier::getDbVersion (1 samples, 1.05%)</title><rect x="86.3158%" y="533" width="1.0526%" height="15" fill="rgb(235,160,14)" fg:x="82" fg:w="1"/><text x="86.5658%" y="543.50"></text></g><g><title>Security`Security::MetaRecord::createAttribute(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (1 samples, 1.05%)</title><rect x="86.3158%" y="517" width="1.0526%" height="15" fill="rgb(212,155,44)" fg:x="82" fg:w="1"/><text x="86.5658%" y="527.50"></text></g><g><title>Security`_ZNSt3__1ssB8ue170006IcNS_11char_traitsIcEEEEDaNS_17basic_string_viewIT_T0_EES7_ (1 samples, 1.05%)</title><rect x="86.3158%" y="501" width="1.0526%" height="15" fill="rgb(226,2,50)" fg:x="82" fg:w="1"/><text x="86.5658%" y="511.50"></text></g><g><title>Security`CSSM_DL_DataGetFirst (1 samples, 1.05%)</title><rect x="87.3684%" y="661" width="1.0526%" height="15" fill="rgb(234,177,6)" fg:x="83" fg:w="1"/><text x="87.6184%" y="671.50"></text></g><g><title>Security`cssm_DataGetFirst(cssm_dl_db_handle, cssm_query const*, long*, cssm_db_record_attribute_data*, cssm_data*, cssm_db_unique_record**) (1 samples, 1.05%)</title><rect x="87.3684%" y="645" width="1.0526%" height="15" fill="rgb(217,24,9)" fg:x="83" fg:w="1"/><text x="87.6184%" y="655.50"></text></g><g><title>Security`SSDLSession::DataGetFirst (1 samples, 1.05%)</title><rect x="87.3684%" y="629" width="1.0526%" height="15" fill="rgb(220,13,46)" fg:x="83" fg:w="1"/><text x="87.6184%" y="639.50"></text></g><g><title>Security`CSSM_DL_DataGetFirst (1 samples, 1.05%)</title><rect x="87.3684%" y="613" width="1.0526%" height="15" fill="rgb(239,221,27)" fg:x="83" fg:w="1"/><text x="87.6184%" y="623.50"></text></g><g><title>Security`cssm_DataGetFirst(cssm_dl_db_handle, cssm_query const*, long*, cssm_db_record_attribute_data*, cssm_data*, cssm_db_unique_record**) (1 samples, 1.05%)</title><rect x="87.3684%" y="597" width="1.0526%" height="15" fill="rgb(222,198,25)" fg:x="83" fg:w="1"/><text x="87.6184%" y="607.50"></text></g><g><title>Security`Security::DatabaseSession::DataGetFirst (1 samples, 1.05%)</title><rect x="87.3684%" y="581" width="1.0526%" height="15" fill="rgb(211,99,13)" fg:x="83" fg:w="1"/><text x="87.6184%" y="591.50"></text></g><g><title>Security`Security::AppleDatabase::dataGetFirst (1 samples, 1.05%)</title><rect x="87.3684%" y="565" width="1.0526%" height="15" fill="rgb(232,111,31)" fg:x="83" fg:w="1"/><text x="87.6184%" y="575.50"></text></g><g><title>Security`Security::LinearCursor::next (1 samples, 1.05%)</title><rect x="87.3684%" y="549" width="1.0526%" height="15" fill="rgb(245,82,37)" fg:x="83" fg:w="1"/><text x="87.6184%" y="559.50"></text></g><g><title>Security`DYLD-STUB$$__dynamic_cast (1 samples, 1.05%)</title><rect x="87.3684%" y="533" width="1.0526%" height="15" fill="rgb(227,149,46)" fg:x="83" fg:w="1"/><text x="87.6184%" y="543.50"></text></g><g><title>Security`Security::CssmClient::DbImpl::dbBlobVersion (3 samples, 3.16%)</title><rect x="86.3158%" y="773" width="3.1579%" height="15" fill="rgb(218,36,50)" fg:x="82" fg:w="3"/><text x="86.5658%" y="783.50">Sec..</text></g><g><title>Security`Security::CssmClient::DbImpl::handle (3 samples, 3.16%)</title><rect x="86.3158%" y="757" width="3.1579%" height="15" fill="rgb(226,80,48)" fg:x="82" fg:w="3"/><text x="86.5658%" y="767.50">Sec..</text></g><g><title>Security`Security::CssmClient::DbImpl::activate (3 samples, 3.16%)</title><rect x="86.3158%" y="741" width="3.1579%" height="15" fill="rgb(238,224,15)" fg:x="82" fg:w="3"/><text x="86.5658%" y="751.50">Sec..</text></g><g><title>Security`Security::CssmClient::DbImpl::open (3 samples, 3.16%)</title><rect x="86.3158%" y="725" width="3.1579%" height="15" fill="rgb(241,136,10)" fg:x="82" fg:w="3"/><text x="86.5658%" y="735.50">Sec..</text></g><g><title>Security`Security::KeychainCore::KeychainImpl::defaultCredentials (2 samples, 2.11%)</title><rect x="87.3684%" y="709" width="2.1053%" height="15" fill="rgb(208,32,45)" fg:x="83" fg:w="2"/><text x="87.6184%" y="719.50">S..</text></g><g><title>Security`Security::KeychainCore::KeychainImpl::keychainSchema (2 samples, 2.11%)</title><rect x="87.3684%" y="693" width="2.1053%" height="15" fill="rgb(207,135,9)" fg:x="83" fg:w="2"/><text x="87.6184%" y="703.50">S..</text></g><g><title>Security`Security::CssmClient::DbDbCursorImpl::next (2 samples, 2.11%)</title><rect x="87.3684%" y="677" width="2.1053%" height="15" fill="rgb(206,86,44)" fg:x="83" fg:w="2"/><text x="87.6184%" y="687.50">S..</text></g><g><title>Security`Security::RefPointer&lt;Security::CssmClient::ObjectImpl&gt;::setPointer (1 samples, 1.05%)</title><rect x="88.4211%" y="661" width="1.0526%" height="15" fill="rgb(245,177,15)" fg:x="84" fg:w="1"/><text x="88.6711%" y="671.50"></text></g><g><title>Security`Security::RefPointer&lt;Security::CssmClient::ObjectImpl&gt;::release_internal (1 samples, 1.05%)</title><rect x="88.4211%" y="645" width="1.0526%" height="15" fill="rgb(206,64,50)" fg:x="84" fg:w="1"/><text x="88.6711%" y="655.50"></text></g><g><title>Security`Security::CssmClient::SSDbUniqueRecordImpl::~SSDbUniqueRecordImpl (1 samples, 1.05%)</title><rect x="88.4211%" y="629" width="1.0526%" height="15" fill="rgb(234,36,40)" fg:x="84" fg:w="1"/><text x="88.6711%" y="639.50"></text></g><g><title>Security`Security::CssmClient::DbUniqueRecordImpl::~DbUniqueRecordImpl (1 samples, 1.05%)</title><rect x="88.4211%" y="613" width="1.0526%" height="15" fill="rgb(213,64,8)" fg:x="84" fg:w="1"/><text x="88.6711%" y="623.50"></text></g><g><title>Security`Security::CssmClient::DbUniqueRecordImpl::deactivate (1 samples, 1.05%)</title><rect x="88.4211%" y="597" width="1.0526%" height="15" fill="rgb(210,75,36)" fg:x="84" fg:w="1"/><text x="88.6711%" y="607.50"></text></g><g><title>Security`CSSM_DL_FreeUniqueRecord (1 samples, 1.05%)</title><rect x="88.4211%" y="581" width="1.0526%" height="15" fill="rgb(229,88,21)" fg:x="84" fg:w="1"/><text x="88.6711%" y="591.50"></text></g><g><title>Security`cssm_FreeUniqueRecord(cssm_dl_db_handle, cssm_db_unique_record*) (1 samples, 1.05%)</title><rect x="88.4211%" y="565" width="1.0526%" height="15" fill="rgb(252,204,47)" fg:x="84" fg:w="1"/><text x="88.6711%" y="575.50"></text></g><g><title>Security`non-virtual thunk to SSDLSession::FreeUniqueRecord (1 samples, 1.05%)</title><rect x="88.4211%" y="549" width="1.0526%" height="15" fill="rgb(208,77,27)" fg:x="84" fg:w="1"/><text x="88.6711%" y="559.50"></text></g><g><title>Security`Security::RefPointer&lt;Security::CssmClient::ObjectImpl&gt;::~RefPointer (1 samples, 1.05%)</title><rect x="88.4211%" y="533" width="1.0526%" height="15" fill="rgb(221,76,26)" fg:x="84" fg:w="1"/><text x="88.6711%" y="543.50"></text></g><g><title>Security`Security::RefPointer&lt;Security::CssmClient::ObjectImpl&gt;::release (1 samples, 1.05%)</title><rect x="88.4211%" y="517" width="1.0526%" height="15" fill="rgb(225,139,18)" fg:x="84" fg:w="1"/><text x="88.6711%" y="527.50"></text></g><g><title>Security`Security::RefPointer&lt;Security::CssmClient::ObjectImpl&gt;::release_internal (1 samples, 1.05%)</title><rect x="88.4211%" y="501" width="1.0526%" height="15" fill="rgb(230,137,11)" fg:x="84" fg:w="1"/><text x="88.6711%" y="511.50"></text></g><g><title>Security`SSUniqueRecordImpl::~SSUniqueRecordImpl (1 samples, 1.05%)</title><rect x="88.4211%" y="485" width="1.0526%" height="15" fill="rgb(212,28,1)" fg:x="84" fg:w="1"/><text x="88.6711%" y="495.50"></text></g><g><title>Security`Security::CssmClient::DbUniqueRecordImpl::~DbUniqueRecordImpl (1 samples, 1.05%)</title><rect x="88.4211%" y="469" width="1.0526%" height="15" fill="rgb(248,164,17)" fg:x="84" fg:w="1"/><text x="88.6711%" y="479.50"></text></g><g><title>Security`Security::CssmClient::DbUniqueRecordImpl::deactivate (1 samples, 1.05%)</title><rect x="88.4211%" y="453" width="1.0526%" height="15" fill="rgb(222,171,42)" fg:x="84" fg:w="1"/><text x="88.6711%" y="463.50"></text></g><g><title>Security`CSSM_DL_FreeUniqueRecord (1 samples, 1.05%)</title><rect x="88.4211%" y="437" width="1.0526%" height="15" fill="rgb(243,84,45)" fg:x="84" fg:w="1"/><text x="88.6711%" y="447.50"></text></g><g><title>Security`StandardAttachment&lt;4u, cssm_spi_dl_funcs&gt;&amp; Security::MappingHandle&lt;long&gt;::findAndLock&lt;StandardAttachment&lt;4u, cssm_spi_dl_funcs&gt;&gt; (1 samples, 1.05%)</title><rect x="88.4211%" y="421" width="1.0526%" height="15" fill="rgb(252,49,23)" fg:x="84" fg:w="1"/><text x="88.6711%" y="431.50"></text></g><g><title>Security`Security::MappingHandle&lt;long&gt;::State::locate (1 samples, 1.05%)</title><rect x="88.4211%" y="405" width="1.0526%" height="15" fill="rgb(215,19,7)" fg:x="84" fg:w="1"/><text x="88.6711%" y="415.50"></text></g><g><title>Security`Security::StLock&lt;Security::Mutex, &amp;Security::Mutex::lock(), &amp;Security::Mutex::unlock()&gt;::~StLock (1 samples, 1.05%)</title><rect x="88.4211%" y="389" width="1.0526%" height="15" fill="rgb(238,81,41)" fg:x="84" fg:w="1"/><text x="88.6711%" y="399.50"></text></g><g><title>Security`countLegacyAPI (1 samples, 1.05%)</title><rect x="89.4737%" y="661" width="1.0526%" height="15" fill="rgb(210,199,37)" fg:x="85" fg:w="1"/><text x="89.7237%" y="671.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (1 samples, 1.05%)</title><rect x="89.4737%" y="645" width="1.0526%" height="15" fill="rgb(244,192,49)" fg:x="85" fg:w="1"/><text x="89.7237%" y="655.50"></text></g><g><title>Security`Security::KeychainCore::KeychainImpl::item (2 samples, 2.11%)</title><rect x="89.4737%" y="773" width="2.1053%" height="15" fill="rgb(226,211,11)" fg:x="85" fg:w="2"/><text x="89.7237%" y="783.50">S..</text></g><g><title>Security`Security::KeychainCore::KeychainImpl::makePrimaryKey (2 samples, 2.11%)</title><rect x="89.4737%" y="757" width="2.1053%" height="15" fill="rgb(236,162,54)" fg:x="85" fg:w="2"/><text x="89.7237%" y="767.50">S..</text></g><g><title>Security`Security::CssmClient::DbUniqueRecordImpl::get (2 samples, 2.11%)</title><rect x="89.4737%" y="741" width="2.1053%" height="15" fill="rgb(220,229,9)" fg:x="85" fg:w="2"/><text x="89.7237%" y="751.50">S..</text></g><g><title>Security`CSSM_DL_DataGetFromUniqueRecordId (2 samples, 2.11%)</title><rect x="89.4737%" y="725" width="2.1053%" height="15" fill="rgb(250,87,22)" fg:x="85" fg:w="2"/><text x="89.7237%" y="735.50">S..</text></g><g><title>Security`cssm_DataGetFromUniqueRecordId(cssm_dl_db_handle, cssm_db_unique_record const*, cssm_db_record_attribute_data*, cssm_data*) (2 samples, 2.11%)</title><rect x="89.4737%" y="709" width="2.1053%" height="15" fill="rgb(239,43,17)" fg:x="85" fg:w="2"/><text x="89.7237%" y="719.50">S..</text></g><g><title>Security`SSDLSession::DataGetFromUniqueRecordId (2 samples, 2.11%)</title><rect x="89.4737%" y="693" width="2.1053%" height="15" fill="rgb(231,177,25)" fg:x="85" fg:w="2"/><text x="89.7237%" y="703.50">S..</text></g><g><title>Security`CSSM_DL_DataGetFromUniqueRecordId (2 samples, 2.11%)</title><rect x="89.4737%" y="677" width="2.1053%" height="15" fill="rgb(219,179,1)" fg:x="85" fg:w="2"/><text x="89.7237%" y="687.50">S..</text></g><g><title>Security`cssm_DataGetFromUniqueRecordId(cssm_dl_db_handle, cssm_db_unique_record const*, cssm_db_record_attribute_data*, cssm_data*) (1 samples, 1.05%)</title><rect x="90.5263%" y="661" width="1.0526%" height="15" fill="rgb(238,219,53)" fg:x="86" fg:w="1"/><text x="90.7763%" y="671.50"></text></g><g><title>Security`Security::CssmPlugin::find (1 samples, 1.05%)</title><rect x="90.5263%" y="645" width="1.0526%" height="15" fill="rgb(232,167,36)" fg:x="86" fg:w="1"/><text x="90.7763%" y="655.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (1 samples, 1.05%)</title><rect x="90.5263%" y="629" width="1.0526%" height="15" fill="rgb(244,19,51)" fg:x="86" fg:w="1"/><text x="90.7763%" y="639.50"></text></g><g><title>Security`countLegacyAPI (1 samples, 1.05%)</title><rect x="91.5789%" y="565" width="1.0526%" height="15" fill="rgb(224,6,22)" fg:x="87" fg:w="1"/><text x="91.8289%" y="575.50"></text></g><g><title>Security`objc_msgSend$threadDictionary (1 samples, 1.05%)</title><rect x="91.5789%" y="549" width="1.0526%" height="15" fill="rgb(224,145,5)" fg:x="87" fg:w="1"/><text x="91.8289%" y="559.50"></text></g><g><title>Security`SSDLSession::killSSUniqueRecord (1 samples, 1.05%)</title><rect x="92.6316%" y="533" width="1.0526%" height="15" fill="rgb(234,130,49)" fg:x="88" fg:w="1"/><text x="92.8816%" y="543.50"></text></g><g><title>Security`non-virtual thunk to Security::DLPluginSession::free (1 samples, 1.05%)</title><rect x="92.6316%" y="517" width="1.0526%" height="15" fill="rgb(254,6,2)" fg:x="88" fg:w="1"/><text x="92.8816%" y="527.50"></text></g><g><title>Security`Security::KeychainCore::KCCursorImpl::next (11 samples, 11.58%)</title><rect x="83.1579%" y="789" width="11.5789%" height="15" fill="rgb(208,96,46)" fg:x="79" fg:w="11"/><text x="83.4079%" y="799.50">Security`Security..</text></g><g><title>Security`Security::SecPointerBase::operator= (3 samples, 3.16%)</title><rect x="91.5789%" y="773" width="3.1579%" height="15" fill="rgb(239,3,39)" fg:x="87" fg:w="3"/><text x="91.8289%" y="783.50">Sec..</text></g><g><title>CoreFoundation`_CFRelease (3 samples, 3.16%)</title><rect x="91.5789%" y="757" width="3.1579%" height="15" fill="rgb(233,210,1)" fg:x="87" fg:w="3"/><text x="91.8289%" y="767.50">Cor..</text></g><g><title>Security`Security::CFClass::refCountForType (3 samples, 3.16%)</title><rect x="91.5789%" y="741" width="3.1579%" height="15" fill="rgb(244,137,37)" fg:x="87" fg:w="3"/><text x="91.8289%" y="751.50">Sec..</text></g><g><title>Security`Security::KeychainCore::Certificate::~Certificate (3 samples, 3.16%)</title><rect x="91.5789%" y="725" width="3.1579%" height="15" fill="rgb(240,136,2)" fg:x="87" fg:w="3"/><text x="91.8289%" y="735.50">Sec..</text></g><g><title>Security`Security::KeychainCore::Certificate::~Certificate (3 samples, 3.16%)</title><rect x="91.5789%" y="709" width="3.1579%" height="15" fill="rgb(239,18,37)" fg:x="87" fg:w="3"/><text x="91.8289%" y="719.50">Sec..</text></g><g><title>Security`Security::KeychainCore::ItemImpl::~ItemImpl (3 samples, 3.16%)</title><rect x="91.5789%" y="693" width="3.1579%" height="15" fill="rgb(218,185,22)" fg:x="87" fg:w="3"/><text x="91.8289%" y="703.50">Sec..</text></g><g><title>Security`Security::RefPointer&lt;Security::CssmClient::ObjectImpl&gt;::~RefPointer (3 samples, 3.16%)</title><rect x="91.5789%" y="677" width="3.1579%" height="15" fill="rgb(225,218,4)" fg:x="87" fg:w="3"/><text x="91.8289%" y="687.50">Sec..</text></g><g><title>Security`Security::RefPointer&lt;Security::CssmClient::ObjectImpl&gt;::release (3 samples, 3.16%)</title><rect x="91.5789%" y="661" width="3.1579%" height="15" fill="rgb(230,182,32)" fg:x="87" fg:w="3"/><text x="91.8289%" y="671.50">Sec..</text></g><g><title>Security`Security::RefPointer&lt;Security::CssmClient::ObjectImpl&gt;::release_internal (3 samples, 3.16%)</title><rect x="91.5789%" y="645" width="3.1579%" height="15" fill="rgb(242,56,43)" fg:x="87" fg:w="3"/><text x="91.8289%" y="655.50">Sec..</text></g><g><title>Security`Security::CssmClient::SSDbUniqueRecordImpl::~SSDbUniqueRecordImpl (3 samples, 3.16%)</title><rect x="91.5789%" y="629" width="3.1579%" height="15" fill="rgb(233,99,24)" fg:x="87" fg:w="3"/><text x="91.8289%" y="639.50">Sec..</text></g><g><title>Security`Security::CssmClient::DbUniqueRecordImpl::~DbUniqueRecordImpl (3 samples, 3.16%)</title><rect x="91.5789%" y="613" width="3.1579%" height="15" fill="rgb(234,209,42)" fg:x="87" fg:w="3"/><text x="91.8289%" y="623.50">Sec..</text></g><g><title>Security`Security::CssmClient::DbUniqueRecordImpl::deactivate (3 samples, 3.16%)</title><rect x="91.5789%" y="597" width="3.1579%" height="15" fill="rgb(227,7,12)" fg:x="87" fg:w="3"/><text x="91.8289%" y="607.50">Sec..</text></g><g><title>Security`CSSM_DL_FreeUniqueRecord (3 samples, 3.16%)</title><rect x="91.5789%" y="581" width="3.1579%" height="15" fill="rgb(245,203,43)" fg:x="87" fg:w="3"/><text x="91.8289%" y="591.50">Sec..</text></g><g><title>Security`cssm_FreeUniqueRecord(cssm_dl_db_handle, cssm_db_unique_record*) (2 samples, 2.11%)</title><rect x="92.6316%" y="565" width="2.1053%" height="15" fill="rgb(238,205,33)" fg:x="88" fg:w="2"/><text x="92.8816%" y="575.50">S..</text></g><g><title>Security`non-virtual thunk to SSDLSession::FreeUniqueRecord (2 samples, 2.11%)</title><rect x="92.6316%" y="549" width="2.1053%" height="15" fill="rgb(231,56,7)" fg:x="88" fg:w="2"/><text x="92.8816%" y="559.50">S..</text></g><g><title>Security`Security::RefPointer&lt;Security::CssmClient::ObjectImpl&gt;::~RefPointer (1 samples, 1.05%)</title><rect x="93.6842%" y="533" width="1.0526%" height="15" fill="rgb(244,186,29)" fg:x="89" fg:w="1"/><text x="93.9342%" y="543.50"></text></g><g><title>Security`Security::RefPointer&lt;Security::CssmClient::ObjectImpl&gt;::release (1 samples, 1.05%)</title><rect x="93.6842%" y="517" width="1.0526%" height="15" fill="rgb(234,111,31)" fg:x="89" fg:w="1"/><text x="93.9342%" y="527.50"></text></g><g><title>Security`Security::RefPointer&lt;Security::CssmClient::ObjectImpl&gt;::release_internal (1 samples, 1.05%)</title><rect x="93.6842%" y="501" width="1.0526%" height="15" fill="rgb(241,149,10)" fg:x="89" fg:w="1"/><text x="93.9342%" y="511.50"></text></g><g><title>Security`SSUniqueRecordImpl::~SSUniqueRecordImpl (1 samples, 1.05%)</title><rect x="93.6842%" y="485" width="1.0526%" height="15" fill="rgb(249,206,44)" fg:x="89" fg:w="1"/><text x="93.9342%" y="495.50"></text></g><g><title>Security`Security::CssmClient::DbUniqueRecordImpl::~DbUniqueRecordImpl (1 samples, 1.05%)</title><rect x="93.6842%" y="469" width="1.0526%" height="15" fill="rgb(251,153,30)" fg:x="89" fg:w="1"/><text x="93.9342%" y="479.50"></text></g><g><title>Security`Security::CssmClient::DbUniqueRecordImpl::deactivate (1 samples, 1.05%)</title><rect x="93.6842%" y="453" width="1.0526%" height="15" fill="rgb(239,152,38)" fg:x="89" fg:w="1"/><text x="93.9342%" y="463.50"></text></g><g><title>Security`CSSM_DL_FreeUniqueRecord (1 samples, 1.05%)</title><rect x="93.6842%" y="437" width="1.0526%" height="15" fill="rgb(249,139,47)" fg:x="89" fg:w="1"/><text x="93.9342%" y="447.50"></text></g><g><title>Security`cssm_FreeUniqueRecord(cssm_dl_db_handle, cssm_db_unique_record*) (1 samples, 1.05%)</title><rect x="93.6842%" y="421" width="1.0526%" height="15" fill="rgb(244,64,35)" fg:x="89" fg:w="1"/><text x="93.9342%" y="431.50"></text></g><g><title>Security`countLegacyAPI (1 samples, 1.05%)</title><rect x="93.6842%" y="405" width="1.0526%" height="15" fill="rgb(216,46,15)" fg:x="89" fg:w="1"/><text x="93.9342%" y="415.50"></text></g><g><title>Security`countLegacyAPIEnabledForThread (1 samples, 1.05%)</title><rect x="93.6842%" y="389" width="1.0526%" height="15" fill="rgb(250,74,19)" fg:x="89" fg:w="1"/><text x="93.9342%" y="399.50"></text></g><g><title>CoreFoundation`-[__NSDictionaryM objectForKeyedSubscript:] (1 samples, 1.05%)</title><rect x="93.6842%" y="373" width="1.0526%" height="15" fill="rgb(249,42,33)" fg:x="89" fg:w="1"/><text x="93.9342%" y="383.50"></text></g><g><title>Security`Security::KeychainCore::TrustSettings::findQualifiedCerts(std::__1::vector&lt;Security::KeychainCore::Keychain, std::__1::allocator (13 samples, 13.68%)</title><rect x="82.1053%" y="805" width="13.6842%" height="15" fill="rgb(242,149,17)" fg:x="78" fg:w="13"/><text x="82.3553%" y="815.50">Security`Security::Ke..</text></g><g><title>Security`Security::KeychainCore::TrustSettings::findDictionaryForCert (1 samples, 1.05%)</title><rect x="94.7368%" y="789" width="1.0526%" height="15" fill="rgb(244,29,21)" fg:x="90" fg:w="1"/><text x="94.9868%" y="799.50"></text></g><g><title>Security`SecTrustSettingsCertHashStrFromCert (1 samples, 1.05%)</title><rect x="94.7368%" y="773" width="1.0526%" height="15" fill="rgb(220,130,37)" fg:x="90" fg:w="1"/><text x="94.9868%" y="783.50"></text></g><g><title>Security`SecTrustSettingsCertHashStrFromData (1 samples, 1.05%)</title><rect x="94.7368%" y="757" width="1.0526%" height="15" fill="rgb(211,67,2)" fg:x="90" fg:w="1"/><text x="94.9868%" y="767.50"></text></g><g><title>libcommonCrypto.dylib`CC_SHA1 (1 samples, 1.05%)</title><rect x="94.7368%" y="741" width="1.0526%" height="15" fill="rgb(235,68,52)" fg:x="90" fg:w="1"/><text x="94.9868%" y="751.50"></text></g><g><title>libcommonCrypto.dylib`CCDigest (1 samples, 1.05%)</title><rect x="94.7368%" y="725" width="1.0526%" height="15" fill="rgb(246,142,3)" fg:x="90" fg:w="1"/><text x="94.9868%" y="735.50"></text></g><g><title>libcorecrypto.dylib`ccdigest (1 samples, 1.05%)</title><rect x="94.7368%" y="709" width="1.0526%" height="15" fill="rgb(241,25,7)" fg:x="90" fg:w="1"/><text x="94.9868%" y="719.50"></text></g><g><title>libcorecrypto.dylib`AccelerateCrypto_SHA1_compress (1 samples, 1.05%)</title><rect x="94.7368%" y="693" width="1.0526%" height="15" fill="rgb(242,119,39)" fg:x="90" fg:w="1"/><text x="94.9868%" y="703.50"></text></g><g><title>libsystem_pthread.dylib`start_wqthread (21 samples, 22.11%)</title><rect x="74.7368%" y="949" width="22.1053%" height="15" fill="rgb(241,98,45)" fg:x="71" fg:w="21"/><text x="74.9868%" y="959.50">libsystem_pthread.dylib`start_wqthr..</text></g><g><title>libsystem_pthread.dylib`_pthread_wqthread (21 samples, 22.11%)</title><rect x="74.7368%" y="933" width="22.1053%" height="15" fill="rgb(254,28,30)" fg:x="71" fg:w="21"/><text x="74.9868%" y="943.50">libsystem_pthread.dylib`_pthread_wq..</text></g><g><title>libdispatch.dylib`_dispatch_workloop_worker_thread (21 samples, 22.11%)</title><rect x="74.7368%" y="917" width="22.1053%" height="15" fill="rgb(241,142,54)" fg:x="71" fg:w="21"/><text x="74.9868%" y="927.50">libdispatch.dylib`_dispatch_workloo..</text></g><g><title>libdispatch.dylib`_dispatch_root_queue_drain_deferred_wlh (21 samples, 22.11%)</title><rect x="74.7368%" y="901" width="22.1053%" height="15" fill="rgb(222,85,15)" fg:x="71" fg:w="21"/><text x="74.9868%" y="911.50">libdispatch.dylib`_dispatch_root_qu..</text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (21 samples, 22.11%)</title><rect x="74.7368%" y="885" width="22.1053%" height="15" fill="rgb(210,85,47)" fg:x="71" fg:w="21"/><text x="74.9868%" y="895.50">libdispatch.dylib`_dispatch_lane_in..</text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (21 samples, 22.11%)</title><rect x="74.7368%" y="869" width="22.1053%" height="15" fill="rgb(224,206,25)" fg:x="71" fg:w="21"/><text x="74.9868%" y="879.50">libdispatch.dylib`_dispatch_lane_se..</text></g><g><title>libdispatch.dylib`_dispatch_client_callout (21 samples, 22.11%)</title><rect x="74.7368%" y="853" width="22.1053%" height="15" fill="rgb(243,201,19)" fg:x="71" fg:w="21"/><text x="74.9868%" y="863.50">libdispatch.dylib`_dispatch_client_..</text></g><g><title>libdispatch.dylib`_dispatch_block_async_invoke2 (21 samples, 22.11%)</title><rect x="74.7368%" y="837" width="22.1053%" height="15" fill="rgb(236,59,4)" fg:x="71" fg:w="21"/><text x="74.9868%" y="847.50">libdispatch.dylib`_dispatch_block_a..</text></g><g><title>Security`__SecTrustSettingsCopyCertificates_block_invoke_2 (21 samples, 22.11%)</title><rect x="74.7368%" y="821" width="22.1053%" height="15" fill="rgb(254,179,45)" fg:x="71" fg:w="21"/><text x="74.9868%" y="831.50">Security`__SecTrustSettingsCopyCert..</text></g><g><title>Security`Security::ModuleNexus&lt;Security::KeychainCore::Globals&gt;::operator() (1 samples, 1.05%)</title><rect x="95.7895%" y="805" width="1.0526%" height="15" fill="rgb(226,14,10)" fg:x="91" fg:w="1"/><text x="96.0395%" y="815.50"></text></g><g><title>Security`Security::ModuleNexusCommon::create(void* (*) (1 samples, 1.05%)</title><rect x="95.7895%" y="789" width="1.0526%" height="15" fill="rgb(244,27,41)" fg:x="91" fg:w="1"/><text x="96.0395%" y="799.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 1.05%)</title><rect x="95.7895%" y="773" width="1.0526%" height="15" fill="rgb(235,35,32)" fg:x="91" fg:w="1"/><text x="96.0395%" y="783.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 1.05%)</title><rect x="95.7895%" y="757" width="1.0526%" height="15" fill="rgb(218,68,31)" fg:x="91" fg:w="1"/><text x="96.0395%" y="767.50"></text></g><g><title>Security`invocation function for block in Security::ModuleNexusCommon::create(void* (*) (1 samples, 1.05%)</title><rect x="95.7895%" y="741" width="1.0526%" height="15" fill="rgb(207,120,37)" fg:x="91" fg:w="1"/><text x="96.0395%" y="751.50"></text></g><g><title>Security`Security::ModuleNexus&lt;Security::KeychainCore::Globals&gt;::make (1 samples, 1.05%)</title><rect x="95.7895%" y="725" width="1.0526%" height="15" fill="rgb(227,98,0)" fg:x="91" fg:w="1"/><text x="96.0395%" y="735.50"></text></g><g><title>CoreFoundation`_CFPreferencesCopyValueWithContainer (1 samples, 1.05%)</title><rect x="95.7895%" y="709" width="1.0526%" height="15" fill="rgb(207,7,3)" fg:x="91" fg:w="1"/><text x="96.0395%" y="719.50"></text></g><g><title>CoreFoundation`-[_CFXPreferences copyValueForKey:identifier:user:host:container:] (1 samples, 1.05%)</title><rect x="95.7895%" y="693" width="1.0526%" height="15" fill="rgb(206,98,19)" fg:x="91" fg:w="1"/><text x="96.0395%" y="703.50"></text></g><g><title>CoreFoundation`-[_CFXPreferences withSourceForIdentifier:user:byHost:container:cloud:perform:] (1 samples, 1.05%)</title><rect x="95.7895%" y="677" width="1.0526%" height="15" fill="rgb(217,5,26)" fg:x="91" fg:w="1"/><text x="96.0395%" y="687.50"></text></g><g><title>CoreFoundation`__66-[_CFXPreferences copyValueForKey:identifier:user:host:container:]_block_invoke (1 samples, 1.05%)</title><rect x="95.7895%" y="661" width="1.0526%" height="15" fill="rgb(235,190,38)" fg:x="91" fg:w="1"/><text x="96.0395%" y="671.50"></text></g><g><title>CoreFoundation`-[CFPrefsPlistSource copyValueForKey:] (1 samples, 1.05%)</title><rect x="95.7895%" y="645" width="1.0526%" height="15" fill="rgb(247,86,24)" fg:x="91" fg:w="1"/><text x="96.0395%" y="655.50"></text></g><g><title>CoreFoundation`_copyValueForKey (1 samples, 1.05%)</title><rect x="95.7895%" y="629" width="1.0526%" height="15" fill="rgb(205,101,16)" fg:x="91" fg:w="1"/><text x="96.0395%" y="639.50"></text></g><g><title>CoreFoundation`-[CFPrefsPlistSource alreadylocked_requestNewData] (1 samples, 1.05%)</title><rect x="95.7895%" y="613" width="1.0526%" height="15" fill="rgb(246,168,33)" fg:x="91" fg:w="1"/><text x="96.0395%" y="623.50"></text></g><g><title>CoreFoundation`-[_CFXPreferences withConnectionForRole:andUserIdentifier:performBlock:] (1 samples, 1.05%)</title><rect x="95.7895%" y="597" width="1.0526%" height="15" fill="rgb(231,114,1)" fg:x="91" fg:w="1"/><text x="96.0395%" y="607.50"></text></g><g><title>CoreFoundation`__50-[CFPrefsPlistSource alreadylocked_requestNewData]_block_invoke (1 samples, 1.05%)</title><rect x="95.7895%" y="581" width="1.0526%" height="15" fill="rgb(207,184,53)" fg:x="91" fg:w="1"/><text x="96.0395%" y="591.50"></text></g><g><title>CoreFoundation`-[CFPrefsPlistSource sendRequestNewDataMessage:toConnection:retryCount:error:] (1 samples, 1.05%)</title><rect x="95.7895%" y="565" width="1.0526%" height="15" fill="rgb(224,95,51)" fg:x="91" fg:w="1"/><text x="96.0395%" y="575.50"></text></g><g><title>CoreFoundation`CFPREFERENCES_IS_WAITING_FOR_SYSTEM_CFPREFSD (1 samples, 1.05%)</title><rect x="95.7895%" y="549" width="1.0526%" height="15" fill="rgb(212,188,45)" fg:x="91" fg:w="1"/><text x="96.0395%" y="559.50"></text></g><g><title>CoreFoundation`__78-[CFPrefsPlistSource sendRequestNewDataMessage:toConnection:retryCount:error:]_block_invoke (1 samples, 1.05%)</title><rect x="95.7895%" y="533" width="1.0526%" height="15" fill="rgb(223,154,38)" fg:x="91" fg:w="1"/><text x="96.0395%" y="543.50"></text></g><g><title>libxpc.dylib`xpc_connection_send_message_with_reply_sync (1 samples, 1.05%)</title><rect x="95.7895%" y="517" width="1.0526%" height="15" fill="rgb(251,22,52)" fg:x="91" fg:w="1"/><text x="96.0395%" y="527.50"></text></g><g><title>libdispatch.dylib`dispatch_mach_send_with_result_and_wait_for_reply (1 samples, 1.05%)</title><rect x="95.7895%" y="501" width="1.0526%" height="15" fill="rgb(229,209,22)" fg:x="91" fg:w="1"/><text x="96.0395%" y="511.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_send_and_wait_for_reply (1 samples, 1.05%)</title><rect x="95.7895%" y="485" width="1.0526%" height="15" fill="rgb(234,138,34)" fg:x="91" fg:w="1"/><text x="96.0395%" y="495.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_send_msg (1 samples, 1.05%)</title><rect x="95.7895%" y="469" width="1.0526%" height="15" fill="rgb(212,95,11)" fg:x="91" fg:w="1"/><text x="96.0395%" y="479.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_send_drain (1 samples, 1.05%)</title><rect x="95.7895%" y="453" width="1.0526%" height="15" fill="rgb(240,179,47)" fg:x="91" fg:w="1"/><text x="96.0395%" y="463.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_msg_send (1 samples, 1.05%)</title><rect x="95.7895%" y="437" width="1.0526%" height="15" fill="rgb(240,163,11)" fg:x="91" fg:w="1"/><text x="96.0395%" y="447.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_msg_send (1 samples, 1.05%)</title><rect x="95.7895%" y="421" width="1.0526%" height="15" fill="rgb(236,37,12)" fg:x="91" fg:w="1"/><text x="96.0395%" y="431.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (1 samples, 1.05%)</title><rect x="95.7895%" y="405" width="1.0526%" height="15" fill="rgb(232,164,16)" fg:x="91" fg:w="1"/><text x="96.0395%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (1 samples, 1.05%)</title><rect x="95.7895%" y="389" width="1.0526%" height="15" fill="rgb(244,205,15)" fg:x="91" fg:w="1"/><text x="96.0395%" y="399.50"></text></g><g><title>rpcurl`&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 1.05%)</title><rect x="96.8421%" y="821" width="1.0526%" height="15" fill="rgb(223,117,47)" fg:x="92" fg:w="1"/><text x="97.0921%" y="831.50"></text></g><g><title>rpcurl`&lt;(&amp;str,u16) as std::net::socket_addr::ToSocketAddrs&gt;::to_socket_addrs (1 samples, 1.05%)</title><rect x="96.8421%" y="805" width="1.0526%" height="15" fill="rgb(244,107,35)" fg:x="92" fg:w="1"/><text x="97.0921%" y="815.50"></text></g><g><title>rpcurl`&lt;std::sys_common::net::LookupHost as core::convert::TryFrom&lt;(&amp;str,u16)&gt;&gt;::try_from::_{{closure}} (1 samples, 1.05%)</title><rect x="96.8421%" y="789" width="1.0526%" height="15" fill="rgb(205,140,8)" fg:x="92" fg:w="1"/><text x="97.0921%" y="799.50"></text></g><g><title>libsystem_info.dylib`getaddrinfo (1 samples, 1.05%)</title><rect x="96.8421%" y="773" width="1.0526%" height="15" fill="rgb(228,84,46)" fg:x="92" fg:w="1"/><text x="97.0921%" y="783.50"></text></g><g><title>libsystem_info.dylib`si_addrinfo (1 samples, 1.05%)</title><rect x="96.8421%" y="757" width="1.0526%" height="15" fill="rgb(254,188,9)" fg:x="92" fg:w="1"/><text x="97.0921%" y="767.50"></text></g><g><title>Network`nw_path_libinfo_path_check (1 samples, 1.05%)</title><rect x="96.8421%" y="741" width="1.0526%" height="15" fill="rgb(206,112,54)" fg:x="92" fg:w="1"/><text x="97.0921%" y="751.50"></text></g><g><title>Network`nw_parameters_create_legacy_tcp_socket (1 samples, 1.05%)</title><rect x="96.8421%" y="725" width="1.0526%" height="15" fill="rgb(216,84,49)" fg:x="92" fg:w="1"/><text x="97.0921%" y="735.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 1.05%)</title><rect x="96.8421%" y="709" width="1.0526%" height="15" fill="rgb(214,194,35)" fg:x="92" fg:w="1"/><text x="97.0921%" y="719.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 1.05%)</title><rect x="96.8421%" y="693" width="1.0526%" height="15" fill="rgb(249,28,3)" fg:x="92" fg:w="1"/><text x="97.0921%" y="703.50"></text></g><g><title>Network`__nw_protocol_setup_tcp_definition_block_invoke (1 samples, 1.05%)</title><rect x="96.8421%" y="677" width="1.0526%" height="15" fill="rgb(222,56,52)" fg:x="92" fg:w="1"/><text x="97.0921%" y="687.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 1.05%)</title><rect x="96.8421%" y="661" width="1.0526%" height="15" fill="rgb(245,217,50)" fg:x="92" fg:w="1"/><text x="97.0921%" y="671.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 1.05%)</title><rect x="96.8421%" y="645" width="1.0526%" height="15" fill="rgb(213,201,24)" fg:x="92" fg:w="1"/><text x="97.0921%" y="655.50"></text></g><g><title>Network`__nw_protocol_get_tcp_identifier_block_invoke (1 samples, 1.05%)</title><rect x="96.8421%" y="629" width="1.0526%" height="15" fill="rgb(248,116,28)" fg:x="92" fg:w="1"/><text x="97.0921%" y="639.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (1 samples, 1.05%)</title><rect x="96.8421%" y="613" width="1.0526%" height="15" fill="rgb(219,72,43)" fg:x="92" fg:w="1"/><text x="97.0921%" y="623.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1 samples, 1.05%)</title><rect x="96.8421%" y="597" width="1.0526%" height="15" fill="rgb(209,138,14)" fg:x="92" fg:w="1"/><text x="97.0921%" y="607.50"></text></g><g><title>Network`__nw_protocol_get_tcp_image_block_invoke (1 samples, 1.05%)</title><rect x="96.8421%" y="581" width="1.0526%" height="15" fill="rgb(222,18,33)" fg:x="92" fg:w="1"/><text x="97.0921%" y="591.50"></text></g><g><title>dyld`dyld4::APIs::dlopen_from (1 samples, 1.05%)</title><rect x="96.8421%" y="565" width="1.0526%" height="15" fill="rgb(213,199,7)" fg:x="92" fg:w="1"/><text x="97.0921%" y="575.50"></text></g><g><title>dyld`dyld4::APIs::dlopen_from(char const*, int, void*)::$_1::operator() (1 samples, 1.05%)</title><rect x="96.8421%" y="549" width="1.0526%" height="15" fill="rgb(250,110,10)" fg:x="92" fg:w="1"/><text x="97.0921%" y="559.50"></text></g><g><title>dyld`dyld4::RuntimeState::notifyDebuggerLoad(std::__1::span (1 samples, 1.05%)</title><rect x="96.8421%" y="533" width="1.0526%" height="15" fill="rgb(248,123,6)" fg:x="92" fg:w="1"/><text x="97.0921%" y="543.50"></text></g><g><title>dyld`dyld4::ExternallyViewableState::addImages(lsl::Allocator&amp;, lsl::Allocator&amp;, std::__1::span (1 samples, 1.05%)</title><rect x="96.8421%" y="517" width="1.0526%" height="15" fill="rgb(206,91,31)" fg:x="92" fg:w="1"/><text x="97.0921%" y="527.50"></text></g><g><title>dyld`dyld4::ExternallyViewableState::ensureSnapshot (1 samples, 1.05%)</title><rect x="96.8421%" y="501" width="1.0526%" height="15" fill="rgb(211,154,13)" fg:x="92" fg:w="1"/><text x="97.0921%" y="511.50"></text></g><g><title>dyld`lsl::UniquePtr&lt;dyld4::Atlas::ProcessSnapshot&gt; lsl::Allocator::makeUnique&lt;dyld4::Atlas::ProcessSnapshot, lsl::Allocator&amp;, dyld4::FileManager&amp;, bool, std::__1::span&lt;std::byte, 18446744073709551615ul&gt; const&amp;&gt;(lsl::Allocator&amp;, dyld4::FileManager&amp;, bool&amp;&amp;, std::__1::span (1 samples, 1.05%)</title><rect x="96.8421%" y="485" width="1.0526%" height="15" fill="rgb(225,148,7)" fg:x="92" fg:w="1"/><text x="97.0921%" y="495.50"></text></g><g><title>dyld`dyld4::Atlas::ProcessSnapshot::ProcessSnapshot(lsl::Allocator&amp;, dyld4::FileManager&amp;, bool, std::__1::span (1 samples, 1.05%)</title><rect x="96.8421%" y="469" width="1.0526%" height="15" fill="rgb(220,160,43)" fg:x="92" fg:w="1"/><text x="97.0921%" y="479.50"></text></g><g><title>dyld`dyld4::Atlas::ProcessSnapshot::Serializer::deserialize(std::__1::span (1 samples, 1.05%)</title><rect x="96.8421%" y="453" width="1.0526%" height="15" fill="rgb(213,52,39)" fg:x="92" fg:w="1"/><text x="97.0921%" y="463.50"></text></g><g><title>dyld`lsl::CRC32cSW::checksum(unsigned int, std::__1::span (1 samples, 1.05%)</title><rect x="96.8421%" y="437" width="1.0526%" height="15" fill="rgb(243,137,7)" fg:x="92" fg:w="1"/><text x="97.0921%" y="447.50"></text></g><g><title>rpcurl`tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (1 samples, 1.05%)</title><rect x="97.8947%" y="773" width="1.0526%" height="15" fill="rgb(230,79,13)" fg:x="93" fg:w="1"/><text x="98.1447%" y="783.50"></text></g><g><title>rpcurl`tokio::runtime::scheduler::multi_thread::park::Parker::park (1 samples, 1.05%)</title><rect x="97.8947%" y="757" width="1.0526%" height="15" fill="rgb(247,105,23)" fg:x="93" fg:w="1"/><text x="98.1447%" y="767.50"></text></g><g><title>rpcurl`tokio::runtime::time::Driver::park_internal (1 samples, 1.05%)</title><rect x="97.8947%" y="741" width="1.0526%" height="15" fill="rgb(223,179,41)" fg:x="93" fg:w="1"/><text x="98.1447%" y="751.50"></text></g><g><title>rpcurl`tokio::runtime::io::driver::Driver::turn (1 samples, 1.05%)</title><rect x="97.8947%" y="725" width="1.0526%" height="15" fill="rgb(218,9,34)" fg:x="93" fg:w="1"/><text x="98.1447%" y="735.50"></text></g><g><title>libsystem_kernel.dylib`kevent (1 samples, 1.05%)</title><rect x="97.8947%" y="709" width="1.0526%" height="15" fill="rgb(222,106,8)" fg:x="93" fg:w="1"/><text x="98.1447%" y="719.50"></text></g><g><title>all (95 samples, 100%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(211,220,0)" fg:x="0" fg:w="95"/><text x="0.2500%" y="975.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (3 samples, 3.16%)</title><rect x="96.8421%" y="949" width="3.1579%" height="15" fill="rgb(229,52,16)" fg:x="92" fg:w="3"/><text x="97.0921%" y="959.50">lib..</text></g><g><title>libsystem_pthread.dylib`_pthread_start (3 samples, 3.16%)</title><rect x="96.8421%" y="933" width="3.1579%" height="15" fill="rgb(212,155,18)" fg:x="92" fg:w="3"/><text x="97.0921%" y="943.50">lib..</text></g><g><title>rpcurl`std::sys::pal::unix::thread::Thread::new::thread_start (3 samples, 3.16%)</title><rect x="96.8421%" y="917" width="3.1579%" height="15" fill="rgb(242,21,14)" fg:x="92" fg:w="3"/><text x="97.0921%" y="927.50">rpc..</text></g><g><title>rpcurl`core::ops::function::FnOnce::call_once{{vtable.shim}} (3 samples, 3.16%)</title><rect x="96.8421%" y="901" width="3.1579%" height="15" fill="rgb(222,19,48)" fg:x="92" fg:w="3"/><text x="97.0921%" y="911.50">rpc..</text></g><g><title>rpcurl`std::sys_common::backtrace::__rust_begin_short_backtrace (3 samples, 3.16%)</title><rect x="96.8421%" y="885" width="3.1579%" height="15" fill="rgb(232,45,27)" fg:x="92" fg:w="3"/><text x="97.0921%" y="895.50">rpc..</text></g><g><title>rpcurl`tokio::runtime::blocking::pool::Inner::run (3 samples, 3.16%)</title><rect x="96.8421%" y="869" width="3.1579%" height="15" fill="rgb(249,103,42)" fg:x="92" fg:w="3"/><text x="97.0921%" y="879.50">rpc..</text></g><g><title>rpcurl`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (3 samples, 3.16%)</title><rect x="96.8421%" y="853" width="3.1579%" height="15" fill="rgb(246,81,33)" fg:x="92" fg:w="3"/><text x="97.0921%" y="863.50">rpc..</text></g><g><title>rpcurl`tokio::runtime::task::core::Core&lt;T,S&gt;::poll (3 samples, 3.16%)</title><rect x="96.8421%" y="837" width="3.1579%" height="15" fill="rgb(252,33,42)" fg:x="92" fg:w="3"/><text x="97.0921%" y="847.50">rpc..</text></g><g><title>rpcurl`tokio::runtime::scheduler::multi_thread::worker::run (2 samples, 2.11%)</title><rect x="97.8947%" y="821" width="2.1053%" height="15" fill="rgb(209,212,41)" fg:x="93" fg:w="2"/><text x="98.1447%" y="831.50">r..</text></g><g><title>rpcurl`tokio::runtime::context::runtime::enter_runtime (2 samples, 2.11%)</title><rect x="97.8947%" y="805" width="2.1053%" height="15" fill="rgb(207,154,6)" fg:x="93" fg:w="2"/><text x="98.1447%" y="815.50">r..</text></g><g><title>rpcurl`tokio::runtime::scheduler::multi_thread::worker::Context::run (2 samples, 2.11%)</title><rect x="97.8947%" y="789" width="2.1053%" height="15" fill="rgb(223,64,47)" fg:x="93" fg:w="2"/><text x="98.1447%" y="799.50">r..</text></g><g><title>rpcurl`tokio::runtime::scheduler::multi_thread::worker::Context::run_task (1 samples, 1.05%)</title><rect x="98.9474%" y="773" width="1.0526%" height="15" fill="rgb(211,161,38)" fg:x="94" fg:w="1"/><text x="99.1974%" y="783.50"></text></g><g><title>rpcurl`tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1 samples, 1.05%)</title><rect x="98.9474%" y="757" width="1.0526%" height="15" fill="rgb(219,138,40)" fg:x="94" fg:w="1"/><text x="99.1974%" y="767.50"></text></g><g><title>rpcurl`std::panicking::try (1 samples, 1.05%)</title><rect x="98.9474%" y="741" width="1.0526%" height="15" fill="rgb(241,228,46)" fg:x="94" fg:w="1"/><text x="99.1974%" y="751.50"></text></g><g><title>rpcurl`&lt;tonic::transport::channel::service::connection::MakeSendRequestService&lt;C&gt; as tower_service::Service&lt;http::uri::Uri&gt;&gt;::call::_{{closure}}::_{{closure}} (1 samples, 1.05%)</title><rect x="98.9474%" y="725" width="1.0526%" height="15" fill="rgb(223,209,38)" fg:x="94" fg:w="1"/><text x="99.1974%" y="735.50"></text></g><g><title>rpcurl`&lt;hyper::proto::h2::client::ClientTask&lt;B,E,T&gt; as core::future::future::Future&gt;::poll (1 samples, 1.05%)</title><rect x="98.9474%" y="709" width="1.0526%" height="15" fill="rgb(236,164,45)" fg:x="94" fg:w="1"/><text x="99.1974%" y="719.50"></text></g><g><title>rpcurl`http::header::map::HeaderMap&lt;T&gt;::remove (1 samples, 1.05%)</title><rect x="98.9474%" y="693" width="1.0526%" height="15" fill="rgb(231,15,5)" fg:x="94" fg:w="1"/><text x="99.1974%" y="703.50"></text></g></svg></svg>